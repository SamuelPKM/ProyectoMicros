

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Nov 04 09:10:08 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32   000000                     
    33                           ; Version 2.35
    34                           ; Generated 05/05/2021 GMT
    35                           ; 
    36                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F45K50 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68   000000                     _ANSELB	set	3932
    69   000000                     _ANSELD	set	3934
    70   000000                     _LATBbits	set	3978
    71   000000                     _TRISBbits	set	3987
    72   000000                     _TRISD	set	3989
    73   000000                     _ADCON1	set	4033
    74   000000                     _T0CON	set	4053
    75   000000                     _LATD	set	3980
    76   000000                     _TMR0	set	4054
    77   000000                     _OSCCON	set	4051
    78                           
    79                           	psect	smallconst
    80   000800                     __psmallconst:
    81                           	callstack 0
    82   000800  00                 	db	0
    83   000801                     STR_1:
    84                           
    85                           ; BSR set to: 15
    86   000801  20                 	db	32
    87   000802  44                 	db	68	;'D'
    88   000803  69                 	db	105	;'i'
    89   000804  73                 	db	115	;'s'
    90   000805  74                 	db	116	;'t'
    91   000806  61                 	db	97	;'a'
    92   000807  6E                 	db	110	;'n'
    93   000808  63                 	db	99	;'c'
    94   000809  69                 	db	105	;'i'
    95   00080A  61                 	db	97	;'a'
    96   00080B  00                 	db	0
    97   00080C                     STR_2:
    98                           
    99                           ; BSR set to: 15
   100   00080C  25                 	db	37
   101   00080D  64                 	db	100	;'d'
   102   00080E  20                 	db	32
   103   00080F  63                 	db	99	;'c'
   104   000810  6D                 	db	109	;'m'
   105   000811  00                 	db	0
   106   000812  00                 	db	0	; dummy byte at the end
   107   000000                     
   108                           ; #config settings
   109                           
   110                           	psect	cinit
   111   0012B8                     __pcinit:
   112                           	callstack 0
   113   0012B8                     start_initialization:
   114                           	callstack 0
   115   0012B8                     __initialization:
   116                           	callstack 0
   117                           
   118                           ; Clear objects allocated to BANK0 (37 bytes)
   119   0012B8  EE00  F060         	lfsr	0,__pbssBANK0
   120   0012BC  0E25               	movlw	37
   121   0012BE                     clear_0:
   122   0012BE  6AEE               	clrf	postinc0,c
   123   0012C0  06E8               	decf	wreg,f,c
   124   0012C2  E1FD               	bnz	clear_0
   125   0012C4                     end_of_initialization:
   126                           	callstack 0
   127   0012C4                     __end_of__initialization:
   128                           	callstack 0
   129   0012C4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   130   0012C6  6EF8               	movwf	tblptru,c
   131   0012C8  0E08               	movlw	high __Lsmallconst
   132   0012CA  6EF7               	movwf	tblptrh,c
   133   0012CC  0100               	movlb	0
   134   0012CE  EF65  F007         	goto	_main	;jump to C main() function
   135                           
   136                           	psect	bssBANK0
   137   000060                     __pbssBANK0:
   138                           	callstack 0
   139   000060                     _width:
   140                           	callstack 0
   141   000060                     	ds	2
   142   000062                     _prec:
   143                           	callstack 0
   144   000062                     	ds	2
   145   000064                     _flags:
   146                           	callstack 0
   147   000064                     	ds	1
   148   000065                     _dbuf:
   149                           	callstack 0
   150   000065                     	ds	32
   151                           
   152                           	psect	cstackBANK0
   153   000085                     __pcstackBANK0:
   154                           	callstack 0
   155   000085                     printf@ap:
   156                           	callstack 0
   157                           
   158                           ; 2 bytes @ 0x0
   159   000085                     	ds	2
   160   000087                     ??_main:
   161                           
   162                           ; 1 bytes @ 0x2
   163   000087                     	ds	2
   164   000089                     main@distancia:
   165                           	callstack 0
   166                           
   167                           ; 2 bytes @ 0x4
   168   000089                     	ds	2
   169                           
   170                           	psect	cstackCOMRAM
   171   000001                     __pcstackCOMRAM:
   172                           	callstack 0
   173   000001                     ??_putch:
   174   000001                     ??_putcm:
   175   000001                     ?_ObtenerDistancia:
   176                           	callstack 0
   177   000001                     ?___aodiv:
   178                           	callstack 0
   179   000001                     ?___aomod:
   180                           	callstack 0
   181   000001                     ___aodiv@dividend:
   182                           	callstack 0
   183   000001                     ___aomod@dividend:
   184                           	callstack 0
   185                           
   186                           ; 8 bytes @ 0x0
   187   000001                     	ds	1
   188   000002                     putch@data:
   189                           	callstack 0
   190   000002                     putcm@data:
   191                           	callstack 0
   192                           
   193                           ; 1 bytes @ 0x1
   194   000002                     	ds	1
   195   000003                     putch@Activa:
   196                           	callstack 0
   197   000003                     putcm@Activa:
   198                           	callstack 0
   199                           
   200                           ; 1 bytes @ 0x2
   201   000003                     	ds	1
   202   000004                     ??_LCD_Init:
   203   000004                     fputc@c:
   204                           	callstack 0
   205                           
   206                           ; 2 bytes @ 0x3
   207   000004                     	ds	2
   208   000006                     fputc@fp:
   209                           	callstack 0
   210                           
   211                           ; 2 bytes @ 0x5
   212   000006                     	ds	2
   213   000008                     ??_fputc:
   214                           
   215                           ; 1 bytes @ 0x7
   216   000008                     	ds	1
   217   000009                     ___aodiv@divisor:
   218                           	callstack 0
   219   000009                     ___aomod@divisor:
   220                           	callstack 0
   221                           
   222                           ; 8 bytes @ 0x8
   223   000009                     	ds	4
   224   00000D                     fputs@s:
   225                           	callstack 0
   226                           
   227                           ; 2 bytes @ 0xC
   228   00000D                     	ds	2
   229   00000F                     fputs@fp:
   230                           	callstack 0
   231                           
   232                           ; 2 bytes @ 0xE
   233   00000F                     	ds	2
   234   000011                     ___aodiv@counter:
   235                           	callstack 0
   236   000011                     ___aomod@counter:
   237                           	callstack 0
   238   000011                     fputs@c:
   239                           	callstack 0
   240                           
   241                           ; 1 bytes @ 0x10
   242   000011                     	ds	1
   243   000012                     ___aodiv@sign:
   244                           	callstack 0
   245   000012                     ___aomod@sign:
   246                           	callstack 0
   247   000012                     fputs@i:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0x11
   251   000012                     	ds	1
   252   000013                     ?_abs:
   253                           	callstack 0
   254   000013                     abs@a:
   255                           	callstack 0
   256   000013                     ___aodiv@quotient:
   257                           	callstack 0
   258                           
   259                           ; 8 bytes @ 0x12
   260   000013                     	ds	1
   261   000014                     pad@fp:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0x13
   265   000014                     	ds	1
   266   000015                     ??_abs:
   267                           
   268                           ; 1 bytes @ 0x14
   269   000015                     	ds	1
   270   000016                     pad@buf:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x15
   274   000016                     	ds	2
   275   000018                     pad@p:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x17
   279   000018                     	ds	2
   280   00001A                     ??_pad:
   281                           
   282                           ; 1 bytes @ 0x19
   283   00001A                     	ds	1
   284   00001B                     pad@i:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x1A
   288   00001B                     	ds	2
   289   00001D                     pad@w:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x1C
   293   00001D                     	ds	2
   294   00001F                     dtoa@fp:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x1E
   298   00001F                     	ds	2
   299   000021                     dtoa@d:
   300                           	callstack 0
   301                           
   302                           ; 8 bytes @ 0x20
   303   000021                     	ds	8
   304   000029                     ??_dtoa:
   305                           
   306                           ; 1 bytes @ 0x28
   307   000029                     	ds	8
   308   000031                     _dtoa$674:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x30
   312   000031                     	ds	2
   313   000033                     dtoa@p:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0x32
   317   000033                     	ds	2
   318   000035                     dtoa@w:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x34
   322   000035                     	ds	2
   323   000037                     dtoa@n:
   324                           	callstack 0
   325                           
   326                           ; 8 bytes @ 0x36
   327   000037                     	ds	8
   328   00003F                     dtoa@i:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x3E
   332   00003F                     	ds	2
   333   000041                     dtoa@s:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0x40
   337   000041                     	ds	1
   338   000042                     vfpfcnvrt@fp:
   339                           	callstack 0
   340                           
   341                           ; 2 bytes @ 0x41
   342   000042                     	ds	2
   343   000044                     vfpfcnvrt@fmt:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0x43
   347   000044                     	ds	2
   348   000046                     vfpfcnvrt@ap:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0x45
   352   000046                     	ds	2
   353   000048                     ??_vfpfcnvrt:
   354                           
   355                           ; 1 bytes @ 0x47
   356   000048                     	ds	2
   357   00004A                     vfpfcnvrt@convarg:
   358                           	callstack 0
   359                           
   360                           ; 8 bytes @ 0x49
   361   00004A                     	ds	8
   362   000052                     vfpfcnvrt@cp:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x51
   366   000052                     	ds	2
   367   000054                     ?_vfprintf:
   368                           	callstack 0
   369   000054                     vfprintf@fp:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x53
   373   000054                     	ds	2
   374   000056                     vfprintf@fmt:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x55
   378   000056                     	ds	2
   379   000058                     vfprintf@ap:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x57
   383   000058                     	ds	2
   384   00005A                     vfprintf@cfmt:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x59
   388   00005A                     	ds	2
   389   00005C                     ?_printf:
   390                           	callstack 0
   391   00005C                     printf@fmt:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x5B
   395   00005C                     	ds	4
   396   000060                     
   397                           ; 1 bytes @ 0x5F
   398 ;;
   399 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   400 ;;
   401 ;; *************** function _main *****************
   402 ;; Defined at:
   403 ;;		line 121 in file "PF.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;		None
   406 ;; Auto vars:     Size  Location     Type
   407 ;;  distancia       2    4[BANK0 ] int 
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      void 
   410 ;; Registers used:
   411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   412 ;; Tracked objects:
   413 ;;		On entry : 0/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   417 ;;      Params:         0       0       0       0       0       0       0       0       0
   418 ;;      Locals:         0       2       0       0       0       0       0       0       0
   419 ;;      Temps:          0       2       0       0       0       0       0       0       0
   420 ;;      Totals:         0       4       0       0       0       0       0       0       0
   421 ;;Total ram usage:        4 bytes
   422 ;; Hardware stack levels required when called: 8
   423 ;; This function calls:
   424 ;;		_Configuracion
   425 ;;		_LCD_Init
   426 ;;		_ObtenerDistancia
   427 ;;		_TMR0_Init
   428 ;;		_Ultrasonic_Init
   429 ;;		_printf
   430 ;;		_putcm
   431 ;; This function is called by:
   432 ;;		Startup code after reset
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           	psect	text0
   437   000ECA                     __ptext0:
   438                           	callstack 0
   439   000ECA                     _main:
   440                           	callstack 23
   441   000ECA                     
   442                           ;PF.c: 122:     LCD_Init();
   443   000ECA  EC03  F008         	call	_LCD_Init	;wreg free
   444   000ECE                     
   445                           ;PF.c: 123:     _delay((unsigned long)((100)*(8000000/4000.0)));
   446   000ECE  0E02               	movlw	2
   447   000ED0  0100               	movlb	0	; () banked
   448   000ED2  6F88               	movwf	(??_main+1)& (0+255),b
   449   000ED4  0E04               	movlw	4
   450   000ED6  6F87               	movwf	??_main& (0+255),b
   451   000ED8  0EBA               	movlw	186
   452   000EDA                     u737:
   453   000EDA  2EE8               	decfsz	wreg,f,c
   454   000EDC  D7FE               	bra	u737
   455   000EDE  2F87               	decfsz	??_main& (0+255),f,b
   456   000EE0  D7FC               	bra	u737
   457   000EE2  2F88               	decfsz	(??_main+1)& (0+255),f,b
   458   000EE4  D7FA               	bra	u737
   459   000EE6  F000               	nop	
   460   000EE8                     
   461                           ;PF.c: 124:     int distancia;;PF.c: 125:     Configuracion();
   462   000EE8  EC32  F009         	call	_Configuracion	;wreg free
   463   000EEC                     
   464                           ;PF.c: 126:     TMR0_Init();
   465   000EEC  EC69  F009         	call	_TMR0_Init	;wreg free
   466   000EF0                     
   467                           ;PF.c: 127:     Ultrasonic_Init();
   468   000EF0  EC75  F009         	call	_Ultrasonic_Init	;wreg free
   469   000EF4                     l1417:
   470                           
   471                           ;PF.c: 131:         distancia = ObtenerDistancia();
   472   000EF4  EC70  F009         	call	_ObtenerDistancia	;wreg free
   473   000EF8  C001  F089         	movff	?_ObtenerDistancia,main@distancia
   474   000EFC  C002  F08A         	movff	?_ObtenerDistancia+1,main@distancia+1
   475   000F00                     
   476                           ;PF.c: 132:         printf(" Distancia");
   477   000F00  0E01               	movlw	low STR_1
   478   000F02  6E5C               	movwf	printf@fmt^0,c
   479   000F04  0E08               	movlw	high STR_1
   480   000F06  6E5D               	movwf	(printf@fmt+1)^0,c
   481   000F08  EC48  F009         	call	_printf	;wreg free
   482   000F0C                     
   483                           ;PF.c: 133:         putcm(0xC2);
   484   000F0C  0EC2               	movlw	194
   485   000F0E  ECF1  F008         	call	_putcm
   486   000F12                     
   487                           ;PF.c: 134:         printf("%d cm", distancia);
   488   000F12  0E0C               	movlw	low STR_2
   489   000F14  6E5C               	movwf	printf@fmt^0,c
   490   000F16  0E08               	movlw	high STR_2
   491   000F18  6E5D               	movwf	(printf@fmt+1)^0,c
   492   000F1A  C089  F05E         	movff	main@distancia,?_printf+2
   493   000F1E  C08A  F05F         	movff	main@distancia+1,?_printf+3
   494   000F22  EC48  F009         	call	_printf	;wreg free
   495   000F26                     
   496                           ;PF.c: 135:         if(distancia < 10)
   497   000F26  0100               	movlb	0	; () banked
   498   000F28  BF8A               	btfsc	(main@distancia+1)& (0+255),7,b
   499   000F2A  EFA2  F007         	goto	u720
   500   000F2E  518A               	movf	(main@distancia+1)& (0+255),w,b
   501   000F30  E107               	bnz	u721
   502   000F32  0E0A               	movlw	10
   503   000F34  5D89               	subwf	main@distancia& (0+255),w,b
   504   000F36  B0D8               	btfsc	status,0,c
   505   000F38  EFA0  F007         	goto	u721
   506   000F3C  EFA2  F007         	goto	u720
   507   000F40                     u721:
   508   000F40  EFA6  F007         	goto	l51
   509   000F44                     u720:
   510   000F44                     
   511                           ; BSR set to: 0
   512                           ;PF.c: 136:         {;PF.c: 137:             LATBbits.LB0 = 0;
   513   000F44  908A               	bcf	138,0,c	;volatile
   514                           
   515                           ;PF.c: 138:             LATBbits.LB1 = 1;
   516   000F46  828A               	bsf	138,1,c	;volatile
   517                           
   518                           ;PF.c: 139:         }
   519   000F48  EFA8  F007         	goto	l1429
   520   000F4C                     l51:
   521                           
   522                           ; BSR set to: 0
   523                           ;PF.c: 141:         {;PF.c: 142:             LATBbits.LB0 = 1;
   524   000F4C  808A               	bsf	138,0,c	;volatile
   525                           
   526                           ;PF.c: 143:             LATBbits.LB1 = 0;
   527   000F4E  928A               	bcf	138,1,c	;volatile
   528   000F50                     l1429:
   529                           
   530                           ; BSR set to: 0
   531                           ;PF.c: 145:         _delay((unsigned long)((200)*(8000000/4000.0)));
   532   000F50  0E03               	movlw	3
   533   000F52  0100               	movlb	0	; () banked
   534   000F54  6F88               	movwf	(??_main+1)& (0+255),b
   535   000F56  0E08               	movlw	8
   536   000F58  6F87               	movwf	??_main& (0+255),b
   537   000F5A  0E77               	movlw	119
   538   000F5C                     u747:
   539   000F5C  2EE8               	decfsz	wreg,f,c
   540   000F5E  D7FE               	bra	u747
   541   000F60  2F87               	decfsz	??_main& (0+255),f,b
   542   000F62  D7FC               	bra	u747
   543   000F64  2F88               	decfsz	(??_main+1)& (0+255),f,b
   544   000F66  D7FA               	bra	u747
   545   000F68  EF7A  F007         	goto	l1417
   546   000F6C  EF00  F000         	goto	start
   547   000F70                     __end_of_main:
   548                           	callstack 0
   549                           
   550 ;; *************** function _printf *****************
   551 ;; Defined at:
   552 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;  fmt             2   91[COMRAM] PTR const unsigned char 
   555 ;;		 -> STR_2(6), STR_1(11), 
   556 ;; Auto vars:     Size  Location     Type
   557 ;;  ap              2    0[BANK0 ] PTR void [1]
   558 ;;		 -> ?_printf(2), 
   559 ;;  ret             2    0        int 
   560 ;; Return value:  Size  Location     Type
   561 ;;                  2   91[COMRAM] int 
   562 ;; Registers used:
   563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   569 ;;      Params:         4       0       0       0       0       0       0       0       0
   570 ;;      Locals:         0       2       0       0       0       0       0       0       0
   571 ;;      Temps:          0       0       0       0       0       0       0       0       0
   572 ;;      Totals:         4       2       0       0       0       0       0       0       0
   573 ;;Total ram usage:        6 bytes
   574 ;; Hardware stack levels used: 1
   575 ;; Hardware stack levels required when called: 7
   576 ;; This function calls:
   577 ;;		_vfprintf
   578 ;; This function is called by:
   579 ;;		_main
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           	psect	text1
   584   001290                     __ptext1:
   585                           	callstack 0
   586   001290                     _printf:
   587                           	callstack 23
   588   001290  0E5E               	movlw	low (?_printf+2)
   589   001292  0100               	movlb	0	; () banked
   590   001294  6F85               	movwf	printf@ap& (0+255),b
   591   001296  0E00               	movlw	high (?_printf+2)
   592   001298  6F86               	movwf	(printf@ap+1)& (0+255),b
   593   00129A                     
   594                           ; BSR set to: 0
   595   00129A  0E00               	movlw	0
   596   00129C  6E54               	movwf	vfprintf@fp^0,c
   597   00129E  0E00               	movlw	0
   598   0012A0  6E55               	movwf	(vfprintf@fp+1)^0,c
   599   0012A2  C05C  F056         	movff	printf@fmt,vfprintf@fmt
   600   0012A6  C05D  F057         	movff	printf@fmt+1,vfprintf@fmt+1
   601   0012AA  0E85               	movlw	low printf@ap
   602   0012AC  6E58               	movwf	vfprintf@ap^0,c
   603   0012AE  0E00               	movlw	high printf@ap
   604   0012B0  6E59               	movwf	(vfprintf@ap+1)^0,c
   605   0012B2  EC85  F008         	call	_vfprintf	;wreg free
   606   0012B6  0012               	return		;funcret
   607   0012B8                     __end_of_printf:
   608                           	callstack 0
   609                           
   610 ;; *************** function _vfprintf *****************
   611 ;; Defined at:
   612 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
   615 ;;		 -> NULL(0), 
   616 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
   617 ;;		 -> STR_2(6), STR_1(11), 
   618 ;;  ap              2   87[COMRAM] PTR PTR void 
   619 ;;		 -> printf@ap(2), 
   620 ;; Auto vars:     Size  Location     Type
   621 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
   622 ;;		 -> STR_2(6), STR_1(11), 
   623 ;; Return value:  Size  Location     Type
   624 ;;                  2   83[COMRAM] int 
   625 ;; Registers used:
   626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   632 ;;      Params:         6       0       0       0       0       0       0       0       0
   633 ;;      Locals:         2       0       0       0       0       0       0       0       0
   634 ;;      Temps:          0       0       0       0       0       0       0       0       0
   635 ;;      Totals:         8       0       0       0       0       0       0       0       0
   636 ;;Total ram usage:        8 bytes
   637 ;; Hardware stack levels used: 1
   638 ;; Hardware stack levels required when called: 6
   639 ;; This function calls:
   640 ;;		_vfpfcnvrt
   641 ;; This function is called by:
   642 ;;		_printf
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	text2
   647   00110A                     __ptext2:
   648                           	callstack 0
   649   00110A                     _vfprintf:
   650                           	callstack 23
   651   00110A                     
   652                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
   653   00110A  C056  F05A         	movff	vfprintf@fmt,vfprintf@cfmt
   654   00110E  C057  F05B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   655                           
   656                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   657   001112  EF99  F008         	goto	l1357
   658   001116                     l1355:
   659                           
   660                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   661   001116  C054  F042         	movff	vfprintf@fp,vfpfcnvrt@fp
   662   00111A  C055  F043         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   663   00111E  0E5A               	movlw	low vfprintf@cfmt
   664   001120  6E44               	movwf	vfpfcnvrt@fmt^0,c
   665   001122  0E00               	movlw	high vfprintf@cfmt
   666   001124  6E45               	movwf	(vfpfcnvrt@fmt+1)^0,c
   667   001126  C058  F046         	movff	vfprintf@ap,vfpfcnvrt@ap
   668   00112A  C059  F047         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   669   00112E  ECBE  F006         	call	_vfpfcnvrt	;wreg free
   670   001132                     l1357:
   671                           
   672                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   673   001132  C05A  FFF6         	movff	vfprintf@cfmt,tblptrl
   674   001136  C05B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   675   00113A                     	if	0	;tblptru may be non-zero
   676   00113A                     	endif
   677   00113A                     	if	0	;tblptru may be non-zero
   678   00113A                     	endif
   679   00113A  0008               	tblrd		*
   680   00113C  50F5               	movf	tablat,w,c
   681   00113E  0900               	iorlw	0
   682   001140  A4D8               	btfss	status,2,c
   683   001142  EFA5  F008         	goto	u711
   684   001146  EFA7  F008         	goto	u710
   685   00114A                     u711:
   686   00114A  EF8B  F008         	goto	l1355
   687   00114E                     u710:
   688   00114E                     
   689                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
   690   00114E  0E00               	movlw	0
   691   001150  6E55               	movwf	(?_vfprintf+1)^0,c
   692   001152  0E00               	movlw	0
   693   001154  6E54               	movwf	?_vfprintf^0,c
   694   001156  0012               	return		;funcret
   695   001158                     __end_of_vfprintf:
   696                           	callstack 0
   697                           
   698 ;; *************** function _vfpfcnvrt *****************
   699 ;; Defined at:
   700 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
   703 ;;		 -> NULL(0), 
   704 ;;  fmt             2   67[COMRAM] PTR PTR unsigned char 
   705 ;;		 -> vfprintf@cfmt(2), 
   706 ;;  ap              2   69[COMRAM] PTR PTR void 
   707 ;;		 -> printf@ap(2), 
   708 ;; Auto vars:     Size  Location     Type
   709 ;;  convarg         8   73[COMRAM] struct .
   710 ;;  cp              2   81[COMRAM] PTR unsigned char 
   711 ;;		 -> STR_2(6), STR_1(11), 
   712 ;;  i               2    0        int 
   713 ;;  done            2    0        int 
   714 ;;  c               1    0        unsigned char 
   715 ;; Return value:  Size  Location     Type
   716 ;;                  1    wreg      void 
   717 ;; Registers used:
   718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   724 ;;      Params:         6       0       0       0       0       0       0       0       0
   725 ;;      Locals:        10       0       0       0       0       0       0       0       0
   726 ;;      Temps:          2       0       0       0       0       0       0       0       0
   727 ;;      Totals:        18       0       0       0       0       0       0       0       0
   728 ;;Total ram usage:       18 bytes
   729 ;; Hardware stack levels used: 1
   730 ;; Hardware stack levels required when called: 5
   731 ;; This function calls:
   732 ;;		_dtoa
   733 ;;		_fputc
   734 ;; This function is called by:
   735 ;;		_vfprintf
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           	psect	text3
   740   000D7C                     __ptext3:
   741                           	callstack 0
   742   000D7C                     _vfpfcnvrt:
   743                           	callstack 23
   744   000D7C                     
   745                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
   746   000D7C  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   747   000D80  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   748   000D84  CFDE FFF6          	movff	postinc2,tblptrl
   749   000D88  CFDD FFF7          	movff	postdec2,tblptrh
   750   000D8C                     	if	0	;tblptru may be non-zero
   751   000D8C                     	endif
   752   000D8C                     	if	0	;tblptru may be non-zero
   753   000D8C                     	endif
   754   000D8C  0008               	tblrd		*
   755   000D8E  50F5               	movf	tablat,w,c
   756   000D90  0A25               	xorlw	37
   757   000D92  A4D8               	btfss	status,2,c
   758   000D94  EFCE  F006         	goto	u681
   759   000D98  EFD0  F006         	goto	u680
   760   000D9C                     u681:
   761   000D9C  EF50  F007         	goto	l1335
   762   000DA0                     u680:
   763   000DA0                     
   764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
   765   000DA0  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   766   000DA4  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   767   000DA8  2ADE               	incf	postinc2,f,c
   768   000DAA  0E00               	movlw	0
   769   000DAC  22DD               	addwfc	postdec2,f,c
   770   000DAE                     
   771                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
   772   000DAE  0E00               	movlw	0
   773   000DB0  0100               	movlb	0	; () banked
   774   000DB2  6F61               	movwf	(_width+1)& (0+255),b
   775   000DB4  0E00               	movlw	0
   776   000DB6  6F60               	movwf	_width& (0+255),b
   777   000DB8  C060  F064         	movff	_width,_flags
   778   000DBC                     
   779                           ; BSR set to: 0
   780                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
   781   000DBC  6962               	setf	_prec& (0+255),b
   782   000DBE  6963               	setf	(_prec+1)& (0+255),b
   783   000DC0                     
   784                           ; BSR set to: 0
   785                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
   786   000DC0  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   787   000DC4  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   788   000DC8  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
   789   000DCC  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
   790   000DD0                     
   791                           ; BSR set to: 0
   792                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
   793   000DD0  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   794   000DD4  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
   795   000DD8                     	if	0	;tblptru may be non-zero
   796   000DD8                     	endif
   797   000DD8                     	if	0	;tblptru may be non-zero
   798   000DD8                     	endif
   799   000DD8  0008               	tblrd		*
   800   000DDA  50F5               	movf	tablat,w,c
   801   000DDC  0A64               	xorlw	100
   802   000DDE  B4D8               	btfsc	status,2,c
   803   000DE0  EFF4  F006         	goto	u691
   804   000DE4  EFF6  F006         	goto	u690
   805   000DE8                     u691:
   806   000DE8  EF04  F007         	goto	l1325
   807   000DEC                     u690:
   808   000DEC                     
   809                           ; BSR set to: 0
   810   000DEC  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   811   000DF0  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
   812   000DF4                     	if	0	;tblptru may be non-zero
   813   000DF4                     	endif
   814   000DF4                     	if	0	;tblptru may be non-zero
   815   000DF4                     	endif
   816   000DF4  0008               	tblrd		*
   817   000DF6  50F5               	movf	tablat,w,c
   818   000DF8  0A69               	xorlw	105
   819   000DFA  A4D8               	btfss	status,2,c
   820   000DFC  EF02  F007         	goto	u701
   821   000E00  EF04  F007         	goto	u700
   822   000E04                     u701:
   823   000E04  EF47  F007         	goto	l1331
   824   000E08                     u700:
   825   000E08                     l1325:
   826                           
   827                           ; BSR set to: 0
   828                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
   829   000E08  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
   830   000E0C  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
   831   000E10  CFDF F048          	movff	indf2,??_vfpfcnvrt
   832   000E14  0E02               	movlw	2
   833   000E16  26DE               	addwf	postinc2,f,c
   834   000E18  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
   835   000E1C  0E00               	movlw	0
   836   000E1E  22DD               	addwfc	postdec2,f,c
   837   000E20  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
   838   000E24  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
   839   000E28  CFDE F04A          	movff	postinc2,vfpfcnvrt@convarg
   840   000E2C  CFDD F04B          	movff	postdec2,vfpfcnvrt@convarg+1
   841   000E30  0E00               	movlw	0
   842   000E32  BE4B               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
   843   000E34  0EFF               	movlw	-1
   844   000E36  6E4C               	movwf	(vfpfcnvrt@convarg+2)^0,c
   845   000E38  6E4D               	movwf	(vfpfcnvrt@convarg+3)^0,c
   846   000E3A  6E4E               	movwf	(vfpfcnvrt@convarg+4)^0,c
   847   000E3C  6E4F               	movwf	(vfpfcnvrt@convarg+5)^0,c
   848   000E3E  6E50               	movwf	(vfpfcnvrt@convarg+6)^0,c
   849   000E40  6E51               	movwf	(vfpfcnvrt@convarg+7)^0,c
   850                           
   851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
   852   000E42  0E01               	movlw	1
   853   000E44  2452               	addwf	vfpfcnvrt@cp^0,w,c
   854   000E46  6E48               	movwf	??_vfpfcnvrt^0,c
   855   000E48  0E00               	movlw	0
   856   000E4A  2053               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
   857   000E4C  6E49               	movwf	(??_vfpfcnvrt+1)^0,c
   858   000E4E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   859   000E52  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   860   000E56  C048  FFDE         	movff	??_vfpfcnvrt,postinc2
   861   000E5A  C049  FFDD         	movff	??_vfpfcnvrt+1,postdec2
   862   000E5E                     
   863                           ; BSR set to: 0
   864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
   865   000E5E  C042  F01F         	movff	vfpfcnvrt@fp,dtoa@fp
   866   000E62  C043  F020         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
   867   000E66  C04A  F021         	movff	vfpfcnvrt@convarg,dtoa@d
   868   000E6A  C04B  F022         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
   869   000E6E  C04C  F023         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
   870   000E72  C04D  F024         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
   871   000E76  C04E  F025         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
   872   000E7A  C04F  F026         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
   873   000E7E  C050  F027         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
   874   000E82  C051  F028         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
   875   000E86  EC0A  F004         	call	_dtoa	;wreg free
   876   000E8A  EF64  F007         	goto	l788
   877   000E8E                     l1331:
   878                           
   879                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
   880   000E8E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   881   000E92  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   882   000E96  2ADE               	incf	postinc2,f,c
   883   000E98  0E00               	movlw	0
   884   000E9A  22DD               	addwfc	postdec2,f,c
   885   000E9C  EF64  F007         	goto	l788
   886   000EA0                     l1335:
   887                           
   888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
   889   000EA0  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   890   000EA4  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   891   000EA8  CFDE FFF6          	movff	postinc2,tblptrl
   892   000EAC  CFDD FFF7          	movff	postdec2,tblptrh
   893   000EB0                     	if	0	;tblptru may be non-zero
   894   000EB0                     	endif
   895   000EB0                     	if	0	;tblptru may be non-zero
   896   000EB0                     	endif
   897   000EB0  0008               	tblrd		*
   898   000EB2  50F5               	movf	tablat,w,c
   899   000EB4  6E04               	movwf	fputc@c^0,c
   900   000EB6  6A05               	clrf	(fputc@c+1)^0,c
   901   000EB8  C042  F006         	movff	vfpfcnvrt@fp,fputc@fp
   902   000EBC  C043  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   903   000EC0  ECB8  F007         	call	_fputc	;wreg free
   904   000EC4  EF47  F007         	goto	l1331
   905   000EC8                     l788:
   906   000EC8  0012               	return		;funcret
   907   000ECA                     __end_of_vfpfcnvrt:
   908                           	callstack 0
   909                           
   910 ;; *************** function _dtoa *****************
   911 ;; Defined at:
   912 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
   915 ;;		 -> NULL(0), 
   916 ;;  d               8   32[COMRAM] long long 
   917 ;; Auto vars:     Size  Location     Type
   918 ;;  n               8   54[COMRAM] long long 
   919 ;;  i               2   62[COMRAM] int 
   920 ;;  w               2   52[COMRAM] int 
   921 ;;  p               2   50[COMRAM] int 
   922 ;;  s               1   64[COMRAM] unsigned char 
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   932 ;;      Params:        10       0       0       0       0       0       0       0       0
   933 ;;      Locals:        17       0       0       0       0       0       0       0       0
   934 ;;      Temps:          8       0       0       0       0       0       0       0       0
   935 ;;      Totals:        35       0       0       0       0       0       0       0       0
   936 ;;Total ram usage:       35 bytes
   937 ;; Hardware stack levels used: 1
   938 ;; Hardware stack levels required when called: 4
   939 ;; This function calls:
   940 ;;		___aodiv
   941 ;;		___aomod
   942 ;;		_abs
   943 ;;		_pad
   944 ;; This function is called by:
   945 ;;		_vfpfcnvrt
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           	psect	text4
   950   000814                     __ptext4:
   951                           	callstack 0
   952   000814                     _dtoa:
   953                           	callstack 23
   954   000814                     
   955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
   956   000814  C021  F037         	movff	dtoa@d,dtoa@n
   957   000818  C022  F038         	movff	dtoa@d+1,dtoa@n+1
   958   00081C  C023  F039         	movff	dtoa@d+2,dtoa@n+2
   959   000820  C024  F03A         	movff	dtoa@d+3,dtoa@n+3
   960   000824  C025  F03B         	movff	dtoa@d+4,dtoa@n+4
   961   000828  C026  F03C         	movff	dtoa@d+5,dtoa@n+5
   962   00082C  C027  F03D         	movff	dtoa@d+6,dtoa@n+6
   963   000830  C028  F03E         	movff	dtoa@d+7,dtoa@n+7
   964   000834                     
   965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
   966   000834  BE3E               	btfsc	(dtoa@n+7)^0,7,c
   967   000836  EF1F  F004         	goto	u581
   968   00083A  EF22  F004         	goto	u580
   969   00083E                     u581:
   970   00083E  0E01               	movlw	1
   971   000840  EF23  F004         	goto	u590
   972   000844                     u580:
   973   000844  0E00               	movlw	0
   974   000846                     u590:
   975   000846  6E41               	movwf	dtoa@s^0,c
   976   000848                     
   977                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
   978   000848  5041               	movf	dtoa@s^0,w,c
   979   00084A  B4D8               	btfsc	status,2,c
   980   00084C  EF2A  F004         	goto	u601
   981   000850  EF2C  F004         	goto	u600
   982   000854                     u601:
   983   000854  EF3C  F004         	goto	l1267
   984   000858                     u600:
   985   000858                     
   986                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
   987   000858  1E3E               	comf	(dtoa@n+7)^0,f,c
   988   00085A  1E3D               	comf	(dtoa@n+6)^0,f,c
   989   00085C  1E3C               	comf	(dtoa@n+5)^0,f,c
   990   00085E  1E3B               	comf	(dtoa@n+4)^0,f,c
   991   000860  1E3A               	comf	(dtoa@n+3)^0,f,c
   992   000862  1E39               	comf	(dtoa@n+2)^0,f,c
   993   000864  1E38               	comf	(dtoa@n+1)^0,f,c
   994   000866  6C37               	negf	dtoa@n^0,c
   995   000868  0E00               	movlw	0
   996   00086A  2238               	addwfc	(dtoa@n+1)^0,f,c
   997   00086C  2239               	addwfc	(dtoa@n+2)^0,f,c
   998   00086E  223A               	addwfc	(dtoa@n+3)^0,f,c
   999   000870  223B               	addwfc	(dtoa@n+4)^0,f,c
  1000   000872  223C               	addwfc	(dtoa@n+5)^0,f,c
  1001   000874  223D               	addwfc	(dtoa@n+6)^0,f,c
  1002   000876  223E               	addwfc	(dtoa@n+7)^0,f,c
  1003   000878                     l1267:
  1004                           
  1005                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1006   000878  0100               	movlb	0	; () banked
  1007   00087A  BF63               	btfsc	(_prec+1)& (0+255),7,b
  1008   00087C  EF4A  F004         	goto	u610
  1009   000880  5163               	movf	(_prec+1)& (0+255),w,b
  1010   000882  E106               	bnz	u611
  1011   000884  0562               	decf	_prec& (0+255),w,b
  1012   000886  B0D8               	btfsc	status,0,c
  1013   000888  EF48  F004         	goto	u611
  1014   00088C  EF4A  F004         	goto	u610
  1015   000890                     u611:
  1016   000890  EF50  F004         	goto	l767
  1017   000894                     u610:
  1018   000894                     
  1019                           ; BSR set to: 0
  1020   000894  0E00               	movlw	0
  1021   000896  6E34               	movwf	(dtoa@p+1)^0,c
  1022   000898  0E01               	movlw	1
  1023   00089A  6E33               	movwf	dtoa@p^0,c
  1024   00089C  EF54  F004         	goto	l769
  1025   0008A0                     l767:
  1026                           
  1027                           ; BSR set to: 0
  1028   0008A0  C062  F033         	movff	_prec,dtoa@p
  1029   0008A4  C063  F034         	movff	_prec+1,dtoa@p+1
  1030   0008A8                     l769:
  1031                           
  1032                           ; BSR set to: 0
  1033                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1034   0008A8  C060  F035         	movff	_width,dtoa@w
  1035   0008AC  C061  F036         	movff	_width+1,dtoa@w+1
  1036   0008B0                     
  1037                           ; BSR set to: 0
  1038                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1039   0008B0  5041               	movf	dtoa@s^0,w,c
  1040   0008B2  B4D8               	btfsc	status,2,c
  1041   0008B4  EF5E  F004         	goto	u621
  1042   0008B8  EF60  F004         	goto	u620
  1043   0008BC                     u621:
  1044   0008BC  EF77  F004         	goto	l770
  1045   0008C0                     u620:
  1046   0008C0                     
  1047                           ; BSR set to: 0
  1048                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1049   0008C0  0635               	decf	dtoa@w^0,f,c
  1050   0008C2  A0D8               	btfss	status,0,c
  1051   0008C4  0636               	decf	(dtoa@w+1)^0,f,c
  1052   0008C6                     
  1053                           ; BSR set to: 0
  1054                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1055   0008C6  5041               	movf	dtoa@s^0,w,c
  1056   0008C8  A4D8               	btfss	status,2,c
  1057   0008CA  EF69  F004         	goto	u631
  1058   0008CE  EF6B  F004         	goto	u630
  1059   0008D2                     u631:
  1060   0008D2  EF71  F004         	goto	l1279
  1061   0008D6                     u630:
  1062   0008D6                     
  1063                           ; BSR set to: 0
  1064   0008D6  0E00               	movlw	0
  1065   0008D8  6E32               	movwf	(_dtoa$674+1)^0,c
  1066   0008DA  0E2B               	movlw	43
  1067   0008DC  6E31               	movwf	_dtoa$674^0,c
  1068   0008DE  EF75  F004         	goto	l1281
  1069   0008E2                     l1279:
  1070                           
  1071                           ; BSR set to: 0
  1072   0008E2  0E00               	movlw	0
  1073   0008E4  6E32               	movwf	(_dtoa$674+1)^0,c
  1074   0008E6  0E2D               	movlw	45
  1075   0008E8  6E31               	movwf	_dtoa$674^0,c
  1076   0008EA                     l1281:
  1077                           
  1078                           ; BSR set to: 0
  1079   0008EA  C031  F041         	movff	_dtoa$674,dtoa@s
  1080   0008EE                     l770:
  1081                           
  1082                           ; BSR set to: 0
  1083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1084   0008EE  0E00               	movlw	0
  1085   0008F0  6E40               	movwf	(dtoa@i+1)^0,c
  1086   0008F2  0E1F               	movlw	31
  1087   0008F4  6E3F               	movwf	dtoa@i^0,c
  1088   0008F6                     
  1089                           ; BSR set to: 0
  1090                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1091   0008F6  0E00               	movlw	0
  1092   0008F8  6F84               	movwf	(_dbuf+31)& (0+255),b
  1093                           
  1094                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1095   0008FA  EFFB  F004         	goto	l1295
  1096   0008FE                     l1285:
  1097                           
  1098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1099   0008FE  063F               	decf	dtoa@i^0,f,c
  1100   000900  A0D8               	btfss	status,0,c
  1101   000902  0640               	decf	(dtoa@i+1)^0,f,c
  1102   000904                     
  1103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1104   000904  0E65               	movlw	low _dbuf
  1105   000906  243F               	addwf	dtoa@i^0,w,c
  1106   000908  6ED9               	movwf	fsr2l,c
  1107   00090A  0E00               	movlw	high _dbuf
  1108   00090C  2040               	addwfc	(dtoa@i+1)^0,w,c
  1109   00090E  6EDA               	movwf	fsr2h,c
  1110   000910  C037  F001         	movff	dtoa@n,___aomod@dividend
  1111   000914  C038  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1112   000918  C039  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1113   00091C  C03A  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1114   000920  C03B  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1115   000924  C03C  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1116   000928  C03D  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1117   00092C  C03E  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1118   000930  0E0A               	movlw	10
  1119   000932  6E09               	movwf	___aomod@divisor^0,c
  1120   000934  0E00               	movlw	0
  1121   000936  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1122   000938  0E00               	movlw	0
  1123   00093A  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1124   00093C  0E00               	movlw	0
  1125   00093E  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1126   000940  0E00               	movlw	0
  1127   000942  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1128   000944  0E00               	movlw	0
  1129   000946  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1130   000948  0E00               	movlw	0
  1131   00094A  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1132   00094C  0E00               	movlw	0
  1133   00094E  6E10               	movwf	(___aomod@divisor+7)^0,c
  1134   000950  EC0C  F006         	call	___aomod	;wreg free
  1135   000954  C001  F029         	movff	?___aomod,??_dtoa
  1136   000958  C002  F02A         	movff	?___aomod+1,??_dtoa+1
  1137   00095C  C003  F02B         	movff	?___aomod+2,??_dtoa+2
  1138   000960  C004  F02C         	movff	?___aomod+3,??_dtoa+3
  1139   000964  C005  F02D         	movff	?___aomod+4,??_dtoa+4
  1140   000968  C006  F02E         	movff	?___aomod+5,??_dtoa+5
  1141   00096C  C007  F02F         	movff	?___aomod+6,??_dtoa+6
  1142   000970  C008  F030         	movff	?___aomod+7,??_dtoa+7
  1143   000974  C029  F013         	movff	??_dtoa,abs@a
  1144   000978  C02A  F014         	movff	??_dtoa+1,abs@a+1
  1145   00097C  EC12  F009         	call	_abs	;wreg free
  1146   000980  5013               	movf	?_abs^0,w,c
  1147   000982  0F30               	addlw	48
  1148   000984  6EDF               	movwf	indf2,c
  1149   000986                     
  1150                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1151   000986  0633               	decf	dtoa@p^0,f,c
  1152   000988  A0D8               	btfss	status,0,c
  1153   00098A  0634               	decf	(dtoa@p+1)^0,f,c
  1154   00098C                     
  1155                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1156   00098C  0635               	decf	dtoa@w^0,f,c
  1157   00098E  A0D8               	btfss	status,0,c
  1158   000990  0636               	decf	(dtoa@w+1)^0,f,c
  1159   000992                     
  1160                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1161   000992  C037  F001         	movff	dtoa@n,___aodiv@dividend
  1162   000996  C038  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1163   00099A  C039  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1164   00099E  C03A  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1165   0009A2  C03B  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1166   0009A6  C03C  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1167   0009AA  C03D  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1168   0009AE  C03E  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1169   0009B2  0E0A               	movlw	10
  1170   0009B4  6E09               	movwf	___aodiv@divisor^0,c
  1171   0009B6  0E00               	movlw	0
  1172   0009B8  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1173   0009BA  0E00               	movlw	0
  1174   0009BC  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1175   0009BE  0E00               	movlw	0
  1176   0009C0  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1177   0009C2  0E00               	movlw	0
  1178   0009C4  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1179   0009C6  0E00               	movlw	0
  1180   0009C8  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1181   0009CA  0E00               	movlw	0
  1182   0009CC  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1183   0009CE  0E00               	movlw	0
  1184   0009D0  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1185   0009D2  EC48  F005         	call	___aodiv	;wreg free
  1186   0009D6  C001  F037         	movff	?___aodiv,dtoa@n
  1187   0009DA  C002  F038         	movff	?___aodiv+1,dtoa@n+1
  1188   0009DE  C003  F039         	movff	?___aodiv+2,dtoa@n+2
  1189   0009E2  C004  F03A         	movff	?___aodiv+3,dtoa@n+3
  1190   0009E6  C005  F03B         	movff	?___aodiv+4,dtoa@n+4
  1191   0009EA  C006  F03C         	movff	?___aodiv+5,dtoa@n+5
  1192   0009EE  C007  F03D         	movff	?___aodiv+6,dtoa@n+6
  1193   0009F2  C008  F03E         	movff	?___aodiv+7,dtoa@n+7
  1194   0009F6                     l1295:
  1195                           
  1196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1197   0009F6  BE40               	btfsc	(dtoa@i+1)^0,7,c
  1198   0009F8  EF06  F005         	goto	u641
  1199   0009FC  5040               	movf	(dtoa@i+1)^0,w,c
  1200   0009FE  E108               	bnz	u640
  1201   000A00  043F               	decf	dtoa@i^0,w,c
  1202   000A02  A0D8               	btfss	status,0,c
  1203   000A04  EF06  F005         	goto	u641
  1204   000A08  EF08  F005         	goto	u640
  1205   000A0C                     u641:
  1206   000A0C  EF24  F005         	goto	l1301
  1207   000A10                     u640:
  1208   000A10  5037               	movf	dtoa@n^0,w,c
  1209   000A12  1038               	iorwf	(dtoa@n+1)^0,w,c
  1210   000A14  1039               	iorwf	(dtoa@n+2)^0,w,c
  1211   000A16  103A               	iorwf	(dtoa@n+3)^0,w,c
  1212   000A18  103B               	iorwf	(dtoa@n+4)^0,w,c
  1213   000A1A  103C               	iorwf	(dtoa@n+5)^0,w,c
  1214   000A1C  103D               	iorwf	(dtoa@n+6)^0,w,c
  1215   000A1E  103E               	iorwf	(dtoa@n+7)^0,w,c
  1216   000A20  A4D8               	btfss	status,2,c
  1217   000A22  EF15  F005         	goto	u651
  1218   000A26  EF17  F005         	goto	u650
  1219   000A2A                     u651:
  1220   000A2A  EF7F  F004         	goto	l1285
  1221   000A2E                     u650:
  1222   000A2E  BE34               	btfsc	(dtoa@p+1)^0,7,c
  1223   000A30  EF24  F005         	goto	u660
  1224   000A34  5034               	movf	(dtoa@p+1)^0,w,c
  1225   000A36  E106               	bnz	u661
  1226   000A38  0433               	decf	dtoa@p^0,w,c
  1227   000A3A  B0D8               	btfsc	status,0,c
  1228   000A3C  EF22  F005         	goto	u661
  1229   000A40  EF24  F005         	goto	u660
  1230   000A44                     u661:
  1231   000A44  EF7F  F004         	goto	l1285
  1232   000A48                     u660:
  1233   000A48                     l1301:
  1234                           
  1235                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1236   000A48  5041               	movf	dtoa@s^0,w,c
  1237   000A4A  B4D8               	btfsc	status,2,c
  1238   000A4C  EF2A  F005         	goto	u671
  1239   000A50  EF2C  F005         	goto	u670
  1240   000A54                     u671:
  1241   000A54  EF37  F005         	goto	l1307
  1242   000A58                     u670:
  1243   000A58                     
  1244                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1245   000A58  063F               	decf	dtoa@i^0,f,c
  1246   000A5A  A0D8               	btfss	status,0,c
  1247   000A5C  0640               	decf	(dtoa@i+1)^0,f,c
  1248   000A5E                     
  1249                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1250   000A5E  0E65               	movlw	low _dbuf
  1251   000A60  243F               	addwf	dtoa@i^0,w,c
  1252   000A62  6ED9               	movwf	fsr2l,c
  1253   000A64  0E00               	movlw	high _dbuf
  1254   000A66  2040               	addwfc	(dtoa@i+1)^0,w,c
  1255   000A68  6EDA               	movwf	fsr2h,c
  1256   000A6A  C041  FFDF         	movff	dtoa@s,indf2
  1257   000A6E                     l1307:
  1258                           
  1259                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1260   000A6E  C01F  F014         	movff	dtoa@fp,pad@fp
  1261   000A72  C020  F015         	movff	dtoa@fp+1,pad@fp+1
  1262   000A76  0E65               	movlw	low _dbuf
  1263   000A78  243F               	addwf	dtoa@i^0,w,c
  1264   000A7A  6E16               	movwf	pad@buf^0,c
  1265   000A7C  0E00               	movlw	high _dbuf
  1266   000A7E  2040               	addwfc	(dtoa@i+1)^0,w,c
  1267   000A80  6E17               	movwf	(pad@buf+1)^0,c
  1268   000A82  C035  F018         	movff	dtoa@w,pad@p
  1269   000A86  C036  F019         	movff	dtoa@w+1,pad@p+1
  1270   000A8A  EC48  F008         	call	_pad	;wreg free
  1271   000A8E  0012               	return		;funcret
  1272   000A90                     __end_of_dtoa:
  1273                           	callstack 0
  1274                           
  1275 ;; *************** function _pad *****************
  1276 ;; Defined at:
  1277 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  1280 ;;		 -> NULL(0), 
  1281 ;;  buf             2   21[COMRAM] PTR unsigned char 
  1282 ;;		 -> dbuf(32), 
  1283 ;;  p               2   23[COMRAM] int 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  w               2   28[COMRAM] int 
  1286 ;;  i               2   26[COMRAM] int 
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      void 
  1289 ;; Registers used:
  1290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1296 ;;      Params:         6       0       0       0       0       0       0       0       0
  1297 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1298 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1299 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1300 ;;Total ram usage:       11 bytes
  1301 ;; Hardware stack levels used: 1
  1302 ;; Hardware stack levels required when called: 3
  1303 ;; This function calls:
  1304 ;;		_fputc
  1305 ;;		_fputs
  1306 ;; This function is called by:
  1307 ;;		_dtoa
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text5
  1312   001090                     __ptext5:
  1313                           	callstack 0
  1314   001090                     _pad:
  1315                           	callstack 23
  1316   001090                     
  1317                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1318   001090  BE19               	btfsc	(pad@p+1)^0,7,c
  1319   001092  EF4D  F008         	goto	u551
  1320   001096  EF4F  F008         	goto	u550
  1321   00109A                     u551:
  1322   00109A  EF55  F008         	goto	l1245
  1323   00109E                     u550:
  1324   00109E  C018  F01D         	movff	pad@p,pad@w
  1325   0010A2  C019  F01E         	movff	pad@p+1,pad@w+1
  1326   0010A6  EF59  F008         	goto	l758
  1327   0010AA                     l1245:
  1328   0010AA  0E00               	movlw	0
  1329   0010AC  6E1E               	movwf	(pad@w+1)^0,c
  1330   0010AE  0E00               	movlw	0
  1331   0010B0  6E1D               	movwf	pad@w^0,c
  1332   0010B2                     l758:
  1333                           
  1334                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1335   0010B2  0E00               	movlw	0
  1336   0010B4  6E1C               	movwf	(pad@i+1)^0,c
  1337   0010B6  0E00               	movlw	0
  1338   0010B8  6E1B               	movwf	pad@i^0,c
  1339                           
  1340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1341   0010BA  EF6B  F008         	goto	l1251
  1342   0010BE                     l1247:
  1343                           
  1344                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1345   0010BE  0E00               	movlw	0
  1346   0010C0  6E05               	movwf	(fputc@c+1)^0,c
  1347   0010C2  0E20               	movlw	32
  1348   0010C4  6E04               	movwf	fputc@c^0,c
  1349   0010C6  C014  F006         	movff	pad@fp,fputc@fp
  1350   0010CA  C015  F007         	movff	pad@fp+1,fputc@fp+1
  1351   0010CE  ECB8  F007         	call	_fputc	;wreg free
  1352   0010D2                     
  1353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1354   0010D2  4A1B               	infsnz	pad@i^0,f,c
  1355   0010D4  2A1C               	incf	(pad@i+1)^0,f,c
  1356   0010D6                     l1251:
  1357                           
  1358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1359   0010D6  501D               	movf	pad@w^0,w,c
  1360   0010D8  5C1B               	subwf	pad@i^0,w,c
  1361   0010DA  501C               	movf	(pad@i+1)^0,w,c
  1362   0010DC  0A80               	xorlw	128
  1363   0010DE  6E1A               	movwf	??_pad^0,c
  1364   0010E0  501E               	movf	(pad@w+1)^0,w,c
  1365   0010E2  0A80               	xorlw	128
  1366   0010E4  581A               	subwfb	??_pad^0,w,c
  1367   0010E6  A0D8               	btfss	status,0,c
  1368   0010E8  EF78  F008         	goto	u561
  1369   0010EC  EF7A  F008         	goto	u560
  1370   0010F0                     u561:
  1371   0010F0  EF5F  F008         	goto	l1247
  1372   0010F4                     u560:
  1373   0010F4                     
  1374                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1375   0010F4  C016  F00D         	movff	pad@buf,fputs@s
  1376   0010F8  C017  F00E         	movff	pad@buf+1,fputs@s+1
  1377   0010FC  C014  F00F         	movff	pad@fp,fputs@fp
  1378   001100  C015  F010         	movff	pad@fp+1,fputs@fp+1
  1379   001104  ECCF  F008         	call	_fputs	;wreg free
  1380   001108  0012               	return		;funcret
  1381   00110A                     __end_of_pad:
  1382                           	callstack 0
  1383                           
  1384 ;; *************** function _fputs *****************
  1385 ;; Defined at:
  1386 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  s               2   12[COMRAM] PTR const unsigned char 
  1389 ;;		 -> dbuf(32), 
  1390 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  1391 ;;		 -> NULL(0), 
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;  i               2   17[COMRAM] int 
  1394 ;;  c               1   16[COMRAM] unsigned char 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  2   12[COMRAM] int 
  1397 ;; Registers used:
  1398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1404 ;;      Params:         4       0       0       0       0       0       0       0       0
  1405 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1406 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1407 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1408 ;;Total ram usage:        7 bytes
  1409 ;; Hardware stack levels used: 1
  1410 ;; Hardware stack levels required when called: 2
  1411 ;; This function calls:
  1412 ;;		_fputc
  1413 ;; This function is called by:
  1414 ;;		_pad
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           	psect	text6
  1419   00119E                     __ptext6:
  1420                           	callstack 0
  1421   00119E                     _fputs:
  1422                           	callstack 23
  1423   00119E  0E00               	movlw	0
  1424   0011A0  6E13               	movwf	(fputs@i+1)^0,c
  1425   0011A2  0E00               	movlw	0
  1426   0011A4  6E12               	movwf	fputs@i^0,c
  1427   0011A6  EFE0  F008         	goto	l1159
  1428   0011AA                     l1155:
  1429   0011AA  C011  F004         	movff	fputs@c,fputc@c
  1430   0011AE  6A05               	clrf	(fputc@c+1)^0,c
  1431   0011B0  C00F  F006         	movff	fputs@fp,fputc@fp
  1432   0011B4  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  1433   0011B8  ECB8  F007         	call	_fputc	;wreg free
  1434   0011BC  4A12               	infsnz	fputs@i^0,f,c
  1435   0011BE  2A13               	incf	(fputs@i+1)^0,f,c
  1436   0011C0                     l1159:
  1437   0011C0  5012               	movf	fputs@i^0,w,c
  1438   0011C2  240D               	addwf	fputs@s^0,w,c
  1439   0011C4  6ED9               	movwf	fsr2l,c
  1440   0011C6  5013               	movf	(fputs@i+1)^0,w,c
  1441   0011C8  200E               	addwfc	(fputs@s+1)^0,w,c
  1442   0011CA  6EDA               	movwf	fsr2h,c
  1443   0011CC  50DF               	movf	indf2,w,c
  1444   0011CE  6E11               	movwf	fputs@c^0,c
  1445   0011D0  5011               	movf	fputs@c^0,w,c
  1446   0011D2  A4D8               	btfss	status,2,c
  1447   0011D4  EFEE  F008         	goto	u411
  1448   0011D8  EFF0  F008         	goto	u410
  1449   0011DC                     u411:
  1450   0011DC  EFD5  F008         	goto	l1155
  1451   0011E0                     u410:
  1452   0011E0  0012               	return		;funcret
  1453   0011E2                     __end_of_fputs:
  1454                           	callstack 0
  1455                           
  1456 ;; *************** function _fputc *****************
  1457 ;; Defined at:
  1458 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;  c               2    3[COMRAM] int 
  1461 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  1462 ;;		 -> NULL(0), 
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;		None
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  2    3[COMRAM] int 
  1467 ;; Registers used:
  1468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1474 ;;      Params:         4       0       0       0       0       0       0       0       0
  1475 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1476 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1477 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1478 ;;Total ram usage:        9 bytes
  1479 ;; Hardware stack levels used: 1
  1480 ;; Hardware stack levels required when called: 1
  1481 ;; This function calls:
  1482 ;;		_putch
  1483 ;; This function is called by:
  1484 ;;		_pad
  1485 ;;		_vfpfcnvrt
  1486 ;;		_fputs
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text7
  1491   000F70                     __ptext7:
  1492                           	callstack 0
  1493   000F70                     _fputc:
  1494                           	callstack 26
  1495   000F70  5006               	movf	fputc@fp^0,w,c
  1496   000F72  1007               	iorwf	(fputc@fp+1)^0,w,c
  1497   000F74  B4D8               	btfsc	status,2,c
  1498   000F76  EFBF  F007         	goto	u371
  1499   000F7A  EFC1  F007         	goto	u370
  1500   000F7E                     u371:
  1501   000F7E  EFCA  F007         	goto	l1143
  1502   000F82                     u370:
  1503   000F82  5006               	movf	fputc@fp^0,w,c
  1504   000F84  1007               	iorwf	(fputc@fp+1)^0,w,c
  1505   000F86  A4D8               	btfss	status,2,c
  1506   000F88  EFC8  F007         	goto	u381
  1507   000F8C  EFCA  F007         	goto	u380
  1508   000F90                     u381:
  1509   000F90  EFCF  F007         	goto	l1145
  1510   000F94                     u380:
  1511   000F94                     l1143:
  1512   000F94  5004               	movf	fputc@c^0,w,c
  1513   000F96  ECAC  F008         	call	_putch
  1514   000F9A  EF02  F008         	goto	l813
  1515   000F9E                     l1145:
  1516   000F9E  EE20 F009          	lfsr	2,9
  1517   000FA2  5006               	movf	fputc@fp^0,w,c
  1518   000FA4  26D9               	addwf	fsr2l,f,c
  1519   000FA6  5007               	movf	(fputc@fp+1)^0,w,c
  1520   000FA8  22DA               	addwfc	fsr2h,f,c
  1521   000FAA  50DE               	movf	postinc2,w,c
  1522   000FAC  10DE               	iorwf	postinc2,w,c
  1523   000FAE  B4D8               	btfsc	status,2,c
  1524   000FB0  EFDC  F007         	goto	u391
  1525   000FB4  EFDE  F007         	goto	u390
  1526   000FB8                     u391:
  1527   000FB8  EFF9  F007         	goto	l1149
  1528   000FBC                     u390:
  1529   000FBC  EE20 F009          	lfsr	2,9
  1530   000FC0  5006               	movf	fputc@fp^0,w,c
  1531   000FC2  26D9               	addwf	fsr2l,f,c
  1532   000FC4  5007               	movf	(fputc@fp+1)^0,w,c
  1533   000FC6  22DA               	addwfc	fsr2h,f,c
  1534   000FC8  EE10 F003          	lfsr	1,3
  1535   000FCC  5006               	movf	fputc@fp^0,w,c
  1536   000FCE  26E1               	addwf	fsr1l,f,c
  1537   000FD0  5007               	movf	(fputc@fp+1)^0,w,c
  1538   000FD2  22E2               	addwfc	fsr1h,f,c
  1539   000FD4  50DE               	movf	postinc2,w,c
  1540   000FD6  5CE6               	subwf	postinc1,w,c
  1541   000FD8  50E6               	movf	postinc1,w,c
  1542   000FDA  0A80               	xorlw	128
  1543   000FDC  6E0C               	movwf	(??_fputc+4)^0,c
  1544   000FDE  50DE               	movf	postinc2,w,c
  1545   000FE0  0A80               	xorlw	128
  1546   000FE2  580C               	subwfb	(??_fputc+4)^0,w,c
  1547   000FE4  B0D8               	btfsc	status,0,c
  1548   000FE6  EFF7  F007         	goto	u401
  1549   000FEA  EFF9  F007         	goto	u400
  1550   000FEE                     u401:
  1551   000FEE  EF02  F008         	goto	l813
  1552   000FF2                     u400:
  1553   000FF2                     l1149:
  1554   000FF2  EE20 F003          	lfsr	2,3
  1555   000FF6  5006               	movf	fputc@fp^0,w,c
  1556   000FF8  26D9               	addwf	fsr2l,f,c
  1557   000FFA  5007               	movf	(fputc@fp+1)^0,w,c
  1558   000FFC  22DA               	addwfc	fsr2h,f,c
  1559   000FFE  2ADE               	incf	postinc2,f,c
  1560   001000  0E00               	movlw	0
  1561   001002  22DD               	addwfc	postdec2,f,c
  1562   001004                     l813:
  1563   001004  0012               	return		;funcret
  1564   001006                     __end_of_fputc:
  1565                           	callstack 0
  1566                           
  1567 ;; *************** function _putch *****************
  1568 ;; Defined at:
  1569 ;;		line 73 in file "PF.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  data            1    wreg     unsigned char 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  data            1    1[COMRAM] unsigned char 
  1574 ;;  Activa          1    2[COMRAM] unsigned char 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      void 
  1577 ;; Registers used:
  1578 ;;		wreg, status,2, status,0
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1584 ;;      Params:         0       0       0       0       0       0       0       0       0
  1585 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1586 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1587 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1588 ;;Total ram usage:        3 bytes
  1589 ;; Hardware stack levels used: 1
  1590 ;; This function calls:
  1591 ;;		Nothing
  1592 ;; This function is called by:
  1593 ;;		_fputc
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text8
  1598   001158                     __ptext8:
  1599                           	callstack 0
  1600   001158                     _putch:
  1601                           	callstack 26
  1602                           
  1603                           ;incstack = 0
  1604                           ;putch@data stored from wreg
  1605   001158  6E02               	movwf	putch@data^0,c
  1606   00115A                     
  1607                           ;PF.c: 74:     char Activa;;PF.c: 75:     Activa = data & 0xF0;
  1608   00115A  5002               	movf	putch@data^0,w,c
  1609   00115C  0BF0               	andlw	240
  1610   00115E  6E03               	movwf	putch@Activa^0,c
  1611                           
  1612                           ;PF.c: 76:     LATD = Activa | 0x05;
  1613   001160  5003               	movf	putch@Activa^0,w,c
  1614   001162  0905               	iorlw	5
  1615   001164  6E8C               	movwf	140,c	;volatile
  1616   001166                     
  1617                           ;PF.c: 77:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  1618   001166  0E06               	movlw	6
  1619   001168                     u757:
  1620   001168  2EE8               	decfsz	wreg,f,c
  1621   00116A  D7FE               	bra	u757
  1622   00116C  D000               	nop2	
  1623   00116E                     
  1624                           ;PF.c: 78:     LATD = Activa | 0x01;
  1625   00116E  5003               	movf	putch@Activa^0,w,c
  1626   001170  0901               	iorlw	1
  1627   001172  6E8C               	movwf	140,c	;volatile
  1628                           
  1629                           ;PF.c: 79:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1630   001174  0E03               	movlw	3
  1631   001176  6E01               	movwf	??_putch^0,c
  1632   001178  0E98               	movlw	152
  1633   00117A                     u767:
  1634   00117A  2EE8               	decfsz	wreg,f,c
  1635   00117C  D7FE               	bra	u767
  1636   00117E  2E01               	decfsz	??_putch^0,f,c
  1637   001180  D7FC               	bra	u767
  1638   001182                     
  1639                           ;PF.c: 80:     Activa = data << 4;
  1640   001182  3802               	swapf	putch@data^0,w,c
  1641   001184  0BF0               	andlw	240
  1642   001186  6E03               	movwf	putch@Activa^0,c
  1643   001188                     
  1644                           ;PF.c: 81:     LATD = Activa | 0x05;
  1645   001188  5003               	movf	putch@Activa^0,w,c
  1646   00118A  0905               	iorlw	5
  1647   00118C  6E8C               	movwf	140,c	;volatile
  1648                           
  1649                           ;PF.c: 82:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  1650   00118E  0E06               	movlw	6
  1651   001190                     u777:
  1652   001190  2EE8               	decfsz	wreg,f,c
  1653   001192  D7FE               	bra	u777
  1654   001194  D000               	nop2	
  1655   001196                     
  1656                           ;PF.c: 83:     LATD = Activa | 0x01;
  1657   001196  5003               	movf	putch@Activa^0,w,c
  1658   001198  0901               	iorlw	1
  1659   00119A  6E8C               	movwf	140,c	;volatile
  1660   00119C  0012               	return		;funcret
  1661   00119E                     __end_of_putch:
  1662                           	callstack 0
  1663                           
  1664 ;; *************** function _abs *****************
  1665 ;; Defined at:
  1666 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;  a               2   18[COMRAM] int 
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;		None
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  2   18[COMRAM] int 
  1673 ;; Registers used:
  1674 ;;		wreg, status,2, status,0
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1680 ;;      Params:         2       0       0       0       0       0       0       0       0
  1681 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1682 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1683 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1684 ;;Total ram usage:        4 bytes
  1685 ;; Hardware stack levels used: 1
  1686 ;; This function calls:
  1687 ;;		Nothing
  1688 ;; This function is called by:
  1689 ;;		_dtoa
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           	psect	text9
  1694   001224                     __ptext9:
  1695                           	callstack 0
  1696   001224                     _abs:
  1697                           	callstack 26
  1698   001224  BE14               	btfsc	(abs@a+1)^0,7,c
  1699   001226  EF1F  F009         	goto	u570
  1700   00122A  5014               	movf	(abs@a+1)^0,w,c
  1701   00122C  E106               	bnz	u571
  1702   00122E  0413               	decf	abs@a^0,w,c
  1703   001230  B0D8               	btfsc	status,0,c
  1704   001232  EF1D  F009         	goto	u571
  1705   001236  EF1F  F009         	goto	u570
  1706   00123A                     u571:
  1707   00123A  EF2D  F009         	goto	l798
  1708   00123E                     u570:
  1709   00123E  C013  F015         	movff	abs@a,??_abs
  1710   001242  C014  F016         	movff	abs@a+1,??_abs+1
  1711   001246  1E15               	comf	??_abs^0,f,c
  1712   001248  1E16               	comf	(??_abs+1)^0,f,c
  1713   00124A  4A15               	infsnz	??_abs^0,f,c
  1714   00124C  2A16               	incf	(??_abs+1)^0,f,c
  1715   00124E  C015  F013         	movff	??_abs,?_abs
  1716   001252  C016  F014         	movff	??_abs+1,?_abs+1
  1717   001256  EF31  F009         	goto	l801
  1718   00125A                     l798:
  1719   00125A  C013  F013         	movff	abs@a,?_abs
  1720   00125E  C014  F014         	movff	abs@a+1,?_abs+1
  1721   001262                     l801:
  1722   001262  0012               	return		;funcret
  1723   001264                     __end_of_abs:
  1724                           	callstack 0
  1725                           
  1726 ;; *************** function ___aomod *****************
  1727 ;; Defined at:
  1728 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  dividend        8    0[COMRAM] long long 
  1731 ;;  divisor         8    8[COMRAM] long long 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  sign            1   17[COMRAM] unsigned char 
  1734 ;;  counter         1   16[COMRAM] unsigned char 
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  8    0[COMRAM] long long 
  1737 ;; Registers used:
  1738 ;;		wreg, status,2, status,0
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1744 ;;      Params:        16       0       0       0       0       0       0       0       0
  1745 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1746 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1747 ;;      Totals:        18       0       0       0       0       0       0       0       0
  1748 ;;Total ram usage:       18 bytes
  1749 ;; Hardware stack levels used: 1
  1750 ;; This function calls:
  1751 ;;		Nothing
  1752 ;; This function is called by:
  1753 ;;		_dtoa
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           	psect	text10
  1758   000C18                     __ptext10:
  1759                           	callstack 0
  1760   000C18                     ___aomod:
  1761                           	callstack 26
  1762   000C18  0E00               	movlw	0
  1763   000C1A  6E12               	movwf	___aomod@sign^0,c
  1764   000C1C  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  1765   000C1E  EF15  F006         	goto	u490
  1766   000C22  EF13  F006         	goto	u491
  1767   000C26                     u491:
  1768   000C26  EF27  F006         	goto	l1213
  1769   000C2A                     u490:
  1770   000C2A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  1771   000C2C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  1772   000C2E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  1773   000C30  1E05               	comf	(___aomod@dividend+4)^0,f,c
  1774   000C32  1E04               	comf	(___aomod@dividend+3)^0,f,c
  1775   000C34  1E03               	comf	(___aomod@dividend+2)^0,f,c
  1776   000C36  1E02               	comf	(___aomod@dividend+1)^0,f,c
  1777   000C38  6C01               	negf	___aomod@dividend^0,c
  1778   000C3A  0E00               	movlw	0
  1779   000C3C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  1780   000C3E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  1781   000C40  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  1782   000C42  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  1783   000C44  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  1784   000C46  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  1785   000C48  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  1786   000C4A  0E01               	movlw	1
  1787   000C4C  6E12               	movwf	___aomod@sign^0,c
  1788   000C4E                     l1213:
  1789   000C4E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  1790   000C50  EF2E  F006         	goto	u500
  1791   000C54  EF2C  F006         	goto	u501
  1792   000C58                     u501:
  1793   000C58  EF3E  F006         	goto	l1217
  1794   000C5C                     u500:
  1795   000C5C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  1796   000C5E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  1797   000C60  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  1798   000C62  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  1799   000C64  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  1800   000C66  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  1801   000C68  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  1802   000C6A  6C09               	negf	___aomod@divisor^0,c
  1803   000C6C  0E00               	movlw	0
  1804   000C6E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  1805   000C70  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  1806   000C72  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  1807   000C74  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  1808   000C76  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  1809   000C78  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  1810   000C7A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  1811   000C7C                     l1217:
  1812   000C7C  5009               	movf	___aomod@divisor^0,w,c
  1813   000C7E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  1814   000C80  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  1815   000C82  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  1816   000C84  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  1817   000C86  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  1818   000C88  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  1819   000C8A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  1820   000C8C  B4D8               	btfsc	status,2,c
  1821   000C8E  EF4B  F006         	goto	u511
  1822   000C92  EF4D  F006         	goto	u510
  1823   000C96                     u511:
  1824   000C96  EF95  F006         	goto	l1233
  1825   000C9A                     u510:
  1826   000C9A  0E01               	movlw	1
  1827   000C9C  6E11               	movwf	___aomod@counter^0,c
  1828   000C9E  EF5B  F006         	goto	l1223
  1829   000CA2                     l1221:
  1830   000CA2  90D8               	bcf	status,0,c
  1831   000CA4  3609               	rlcf	___aomod@divisor^0,f,c
  1832   000CA6  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  1833   000CA8  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  1834   000CAA  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  1835   000CAC  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  1836   000CAE  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  1837   000CB0  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  1838   000CB2  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  1839   000CB4  2A11               	incf	___aomod@counter^0,f,c
  1840   000CB6                     l1223:
  1841   000CB6  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  1842   000CB8  EF60  F006         	goto	u521
  1843   000CBC  EF62  F006         	goto	u520
  1844   000CC0                     u521:
  1845   000CC0  EF51  F006         	goto	l1221
  1846   000CC4                     u520:
  1847   000CC4                     l1225:
  1848   000CC4  5009               	movf	___aomod@divisor^0,w,c
  1849   000CC6  5C01               	subwf	___aomod@dividend^0,w,c
  1850   000CC8  500A               	movf	(___aomod@divisor+1)^0,w,c
  1851   000CCA  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  1852   000CCC  500B               	movf	(___aomod@divisor+2)^0,w,c
  1853   000CCE  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  1854   000CD0  500C               	movf	(___aomod@divisor+3)^0,w,c
  1855   000CD2  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  1856   000CD4  500D               	movf	(___aomod@divisor+4)^0,w,c
  1857   000CD6  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  1858   000CD8  500E               	movf	(___aomod@divisor+5)^0,w,c
  1859   000CDA  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  1860   000CDC  500F               	movf	(___aomod@divisor+6)^0,w,c
  1861   000CDE  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  1862   000CE0  5010               	movf	(___aomod@divisor+7)^0,w,c
  1863   000CE2  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  1864   000CE4  A0D8               	btfss	status,0,c
  1865   000CE6  EF77  F006         	goto	u531
  1866   000CEA  EF79  F006         	goto	u530
  1867   000CEE                     u531:
  1868   000CEE  EF89  F006         	goto	l1229
  1869   000CF2                     u530:
  1870   000CF2  5009               	movf	___aomod@divisor^0,w,c
  1871   000CF4  5E01               	subwf	___aomod@dividend^0,f,c
  1872   000CF6  500A               	movf	(___aomod@divisor+1)^0,w,c
  1873   000CF8  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  1874   000CFA  500B               	movf	(___aomod@divisor+2)^0,w,c
  1875   000CFC  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  1876   000CFE  500C               	movf	(___aomod@divisor+3)^0,w,c
  1877   000D00  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  1878   000D02  500D               	movf	(___aomod@divisor+4)^0,w,c
  1879   000D04  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  1880   000D06  500E               	movf	(___aomod@divisor+5)^0,w,c
  1881   000D08  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  1882   000D0A  500F               	movf	(___aomod@divisor+6)^0,w,c
  1883   000D0C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  1884   000D0E  5010               	movf	(___aomod@divisor+7)^0,w,c
  1885   000D10  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  1886   000D12                     l1229:
  1887   000D12  90D8               	bcf	status,0,c
  1888   000D14  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  1889   000D16  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  1890   000D18  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  1891   000D1A  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  1892   000D1C  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  1893   000D1E  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  1894   000D20  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  1895   000D22  3209               	rrcf	___aomod@divisor^0,f,c
  1896   000D24  2E11               	decfsz	___aomod@counter^0,f,c
  1897   000D26  EF62  F006         	goto	l1225
  1898   000D2A                     l1233:
  1899   000D2A  5012               	movf	___aomod@sign^0,w,c
  1900   000D2C  B4D8               	btfsc	status,2,c
  1901   000D2E  EF9B  F006         	goto	u541
  1902   000D32  EF9D  F006         	goto	u540
  1903   000D36                     u541:
  1904   000D36  EFAD  F006         	goto	l1237
  1905   000D3A                     u540:
  1906   000D3A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  1907   000D3C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  1908   000D3E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  1909   000D40  1E05               	comf	(___aomod@dividend+4)^0,f,c
  1910   000D42  1E04               	comf	(___aomod@dividend+3)^0,f,c
  1911   000D44  1E03               	comf	(___aomod@dividend+2)^0,f,c
  1912   000D46  1E02               	comf	(___aomod@dividend+1)^0,f,c
  1913   000D48  6C01               	negf	___aomod@dividend^0,c
  1914   000D4A  0E00               	movlw	0
  1915   000D4C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  1916   000D4E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  1917   000D50  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  1918   000D52  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  1919   000D54  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  1920   000D56  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  1921   000D58  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  1922   000D5A                     l1237:
  1923   000D5A  C001  F001         	movff	___aomod@dividend,?___aomod
  1924   000D5E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  1925   000D62  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  1926   000D66  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  1927   000D6A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  1928   000D6E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  1929   000D72  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  1930   000D76  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  1931   000D7A  0012               	return		;funcret
  1932   000D7C                     __end_of___aomod:
  1933                           	callstack 0
  1934                           
  1935 ;; *************** function ___aodiv *****************
  1936 ;; Defined at:
  1937 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;  dividend        8    0[COMRAM] long long 
  1940 ;;  divisor         8    8[COMRAM] long long 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  quotient        8   18[COMRAM] long long 
  1943 ;;  sign            1   17[COMRAM] unsigned char 
  1944 ;;  counter         1   16[COMRAM] unsigned char 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  8    0[COMRAM] long long 
  1947 ;; Registers used:
  1948 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1954 ;;      Params:        16       0       0       0       0       0       0       0       0
  1955 ;;      Locals:        10       0       0       0       0       0       0       0       0
  1956 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1957 ;;      Totals:        26       0       0       0       0       0       0       0       0
  1958 ;;Total ram usage:       26 bytes
  1959 ;; Hardware stack levels used: 1
  1960 ;; This function calls:
  1961 ;;		Nothing
  1962 ;; This function is called by:
  1963 ;;		_dtoa
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text11
  1968   000A90                     __ptext11:
  1969                           	callstack 0
  1970   000A90                     ___aodiv:
  1971                           	callstack 26
  1972   000A90  0E00               	movlw	0
  1973   000A92  6E12               	movwf	___aodiv@sign^0,c
  1974   000A94  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  1975   000A96  EF51  F005         	goto	u420
  1976   000A9A  EF4F  F005         	goto	u421
  1977   000A9E                     u421:
  1978   000A9E  EF63  F005         	goto	l1169
  1979   000AA2                     u420:
  1980   000AA2  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  1981   000AA4  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  1982   000AA6  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  1983   000AA8  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  1984   000AAA  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  1985   000AAC  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  1986   000AAE  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  1987   000AB0  6C09               	negf	___aodiv@divisor^0,c
  1988   000AB2  0E00               	movlw	0
  1989   000AB4  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  1990   000AB6  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  1991   000AB8  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  1992   000ABA  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  1993   000ABC  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  1994   000ABE  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  1995   000AC0  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  1996   000AC2  0E01               	movlw	1
  1997   000AC4  6E12               	movwf	___aodiv@sign^0,c
  1998   000AC6                     l1169:
  1999   000AC6  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2000   000AC8  EF6A  F005         	goto	u430
  2001   000ACC  EF68  F005         	goto	u431
  2002   000AD0                     u431:
  2003   000AD0  EF7C  F005         	goto	l1175
  2004   000AD4                     u430:
  2005   000AD4  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2006   000AD6  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2007   000AD8  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2008   000ADA  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2009   000ADC  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2010   000ADE  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2011   000AE0  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2012   000AE2  6C01               	negf	___aodiv@dividend^0,c
  2013   000AE4  0E00               	movlw	0
  2014   000AE6  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2015   000AE8  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2016   000AEA  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2017   000AEC  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2018   000AEE  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2019   000AF0  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2020   000AF2  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2021   000AF4  0E01               	movlw	1
  2022   000AF6  1A12               	xorwf	___aodiv@sign^0,f,c
  2023   000AF8                     l1175:
  2024   000AF8  EE20  F013         	lfsr	2,___aodiv@quotient
  2025   000AFC  0E07               	movlw	7
  2026   000AFE                     u441:
  2027   000AFE  6ADE               	clrf	postinc2,c
  2028   000B00  06E8               	decf	wreg,f,c
  2029   000B02  E2FD               	bc	u441
  2030   000B04  5009               	movf	___aodiv@divisor^0,w,c
  2031   000B06  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2032   000B08  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2033   000B0A  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2034   000B0C  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2035   000B0E  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2036   000B10  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2037   000B12  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2038   000B14  B4D8               	btfsc	status,2,c
  2039   000B16  EF8F  F005         	goto	u451
  2040   000B1A  EF91  F005         	goto	u450
  2041   000B1E                     u451:
  2042   000B1E  EFE3  F005         	goto	l1197
  2043   000B22                     u450:
  2044   000B22  0E01               	movlw	1
  2045   000B24  6E11               	movwf	___aodiv@counter^0,c
  2046   000B26  EF9F  F005         	goto	l1183
  2047   000B2A                     l1181:
  2048   000B2A  90D8               	bcf	status,0,c
  2049   000B2C  3609               	rlcf	___aodiv@divisor^0,f,c
  2050   000B2E  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2051   000B30  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2052   000B32  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2053   000B34  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2054   000B36  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2055   000B38  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2056   000B3A  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2057   000B3C  2A11               	incf	___aodiv@counter^0,f,c
  2058   000B3E                     l1183:
  2059   000B3E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2060   000B40  EFA4  F005         	goto	u461
  2061   000B44  EFA6  F005         	goto	u460
  2062   000B48                     u461:
  2063   000B48  EF95  F005         	goto	l1181
  2064   000B4C                     u460:
  2065   000B4C                     l1185:
  2066   000B4C  90D8               	bcf	status,0,c
  2067   000B4E  3613               	rlcf	___aodiv@quotient^0,f,c
  2068   000B50  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2069   000B52  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2070   000B54  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2071   000B56  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2072   000B58  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2073   000B5A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2074   000B5C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2075   000B5E  5009               	movf	___aodiv@divisor^0,w,c
  2076   000B60  5C01               	subwf	___aodiv@dividend^0,w,c
  2077   000B62  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2078   000B64  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2079   000B66  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2080   000B68  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2081   000B6A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2082   000B6C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2083   000B6E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2084   000B70  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2085   000B72  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2086   000B74  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2087   000B76  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2088   000B78  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2089   000B7A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2090   000B7C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2091   000B7E  A0D8               	btfss	status,0,c
  2092   000B80  EFC4  F005         	goto	u471
  2093   000B84  EFC6  F005         	goto	u470
  2094   000B88                     u471:
  2095   000B88  EFD7  F005         	goto	l1193
  2096   000B8C                     u470:
  2097   000B8C  5009               	movf	___aodiv@divisor^0,w,c
  2098   000B8E  5E01               	subwf	___aodiv@dividend^0,f,c
  2099   000B90  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2100   000B92  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2101   000B94  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2102   000B96  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2103   000B98  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2104   000B9A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2105   000B9C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2106   000B9E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2107   000BA0  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2108   000BA2  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2109   000BA4  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2110   000BA6  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2111   000BA8  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2112   000BAA  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2113   000BAC  8013               	bsf	___aodiv@quotient^0,0,c
  2114   000BAE                     l1193:
  2115   000BAE  90D8               	bcf	status,0,c
  2116   000BB0  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2117   000BB2  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2118   000BB4  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2119   000BB6  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2120   000BB8  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2121   000BBA  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2122   000BBC  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2123   000BBE  3209               	rrcf	___aodiv@divisor^0,f,c
  2124   000BC0  2E11               	decfsz	___aodiv@counter^0,f,c
  2125   000BC2  EFA6  F005         	goto	l1185
  2126   000BC6                     l1197:
  2127   000BC6  5012               	movf	___aodiv@sign^0,w,c
  2128   000BC8  B4D8               	btfsc	status,2,c
  2129   000BCA  EFE9  F005         	goto	u481
  2130   000BCE  EFEB  F005         	goto	u480
  2131   000BD2                     u481:
  2132   000BD2  EFFB  F005         	goto	l1201
  2133   000BD6                     u480:
  2134   000BD6  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2135   000BD8  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2136   000BDA  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2137   000BDC  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2138   000BDE  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2139   000BE0  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2140   000BE2  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2141   000BE4  6C13               	negf	___aodiv@quotient^0,c
  2142   000BE6  0E00               	movlw	0
  2143   000BE8  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2144   000BEA  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2145   000BEC  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2146   000BEE  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2147   000BF0  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2148   000BF2  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2149   000BF4  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2150   000BF6                     l1201:
  2151   000BF6  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2152   000BFA  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2153   000BFE  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2154   000C02  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2155   000C06  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2156   000C0A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2157   000C0E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2158   000C12  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2159   000C16  0012               	return		;funcret
  2160   000C18                     __end_of___aodiv:
  2161                           	callstack 0
  2162                           
  2163 ;; *************** function _Ultrasonic_Init *****************
  2164 ;; Defined at:
  2165 ;;		line 17 in file "PF.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;		None
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;		None
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      void 
  2172 ;; Registers used:
  2173 ;;		None
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2179 ;;      Params:         0       0       0       0       0       0       0       0       0
  2180 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2181 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2182 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2183 ;;Total ram usage:        0 bytes
  2184 ;; Hardware stack levels used: 1
  2185 ;; This function calls:
  2186 ;;		Nothing
  2187 ;; This function is called by:
  2188 ;;		_main
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text12
  2193   0012EA                     __ptext12:
  2194                           	callstack 0
  2195   0012EA                     _Ultrasonic_Init:
  2196                           	callstack 30
  2197   0012EA                     
  2198                           ;PF.c: 18:     TRISBbits.RB2 = 0;
  2199   0012EA  9493               	bcf	147,2,c	;volatile
  2200                           
  2201                           ;PF.c: 19:     TRISBbits.RB3 = 1;
  2202   0012EC  8693               	bsf	147,3,c	;volatile
  2203                           
  2204                           ;PF.c: 20:     LATBbits.LB2 = 0;
  2205   0012EE  948A               	bcf	138,2,c	;volatile
  2206   0012F0  0012               	return		;funcret
  2207   0012F2                     __end_of_Ultrasonic_Init:
  2208                           	callstack 0
  2209                           
  2210 ;; *************** function _TMR0_Init *****************
  2211 ;; Defined at:
  2212 ;;		line 50 in file "PF.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, status,2
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2226 ;;      Params:         0       0       0       0       0       0       0       0       0
  2227 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2229 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2230 ;;Total ram usage:        0 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; This function calls:
  2233 ;;		Nothing
  2234 ;; This function is called by:
  2235 ;;		_main
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text13
  2240   0012D2                     __ptext13:
  2241                           	callstack 0
  2242   0012D2                     _TMR0_Init:
  2243                           	callstack 30
  2244   0012D2                     
  2245                           ;PF.c: 51:     T0CON = 0x88;
  2246   0012D2  0E88               	movlw	136
  2247   0012D4  6ED5               	movwf	213,c	;volatile
  2248                           
  2249                           ;PF.c: 52:     TMR0 = 0;
  2250   0012D6  0E00               	movlw	0
  2251   0012D8  6ED7               	movwf	215,c	;volatile
  2252   0012DA  0E00               	movlw	0
  2253   0012DC  6ED6               	movwf	214,c	;volatile
  2254   0012DE  0012               	return		;funcret
  2255   0012E0                     __end_of_TMR0_Init:
  2256                           	callstack 0
  2257                           
  2258 ;; *************** function _ObtenerDistancia *****************
  2259 ;; Defined at:
  2260 ;;		line 24 in file "PF.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;  distancia       2    0        int 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  2    0[COMRAM] int 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2274 ;;      Params:         2       0       0       0       0       0       0       0       0
  2275 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2276 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2277 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2278 ;;Total ram usage:        2 bytes
  2279 ;; Hardware stack levels used: 1
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_main
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text14
  2288   0012E0                     __ptext14:
  2289                           	callstack 0
  2290   0012E0                     _ObtenerDistancia:
  2291                           	callstack 30
  2292   0012E0                     
  2293                           ;PF.c: 47:     return distancia;
  2294   0012E0  0E00               	movlw	0
  2295   0012E2  6E02               	movwf	(?_ObtenerDistancia+1)^0,c
  2296   0012E4  0E09               	movlw	9
  2297   0012E6  6E01               	movwf	?_ObtenerDistancia^0,c
  2298   0012E8  0012               	return		;funcret
  2299   0012EA                     __end_of_ObtenerDistancia:
  2300                           	callstack 0
  2301                           
  2302 ;; *************** function _LCD_Init *****************
  2303 ;; Defined at:
  2304 ;;		line 99 in file "PF.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;		None
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  1    wreg      void 
  2311 ;; Registers used:
  2312 ;;		wreg, status,2, status,0, cstack
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2318 ;;      Params:         0       0       0       0       0       0       0       0       0
  2319 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2320 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2321 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2322 ;;Total ram usage:        1 bytes
  2323 ;; Hardware stack levels used: 1
  2324 ;; Hardware stack levels required when called: 1
  2325 ;; This function calls:
  2326 ;;		_putcm
  2327 ;; This function is called by:
  2328 ;;		_main
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           	psect	text15
  2333   001006                     __ptext15:
  2334                           	callstack 0
  2335   001006                     _LCD_Init:
  2336                           	callstack 29
  2337   001006                     
  2338                           ;PF.c: 101:     _delay((unsigned long)((30)*(8000000/4000.0)));
  2339   001006  0E4E               	movlw	78
  2340   001008  6E04               	movwf	??_LCD_Init^0,c
  2341   00100A  0EEB               	movlw	235
  2342   00100C                     u787:
  2343   00100C  2EE8               	decfsz	wreg,f,c
  2344   00100E  D7FE               	bra	u787
  2345   001010  2E04               	decfsz	??_LCD_Init^0,f,c
  2346   001012  D7FC               	bra	u787
  2347   001014  F000               	nop	
  2348   001016                     
  2349                           ;PF.c: 102:     putcm(0x02);
  2350   001016  0E02               	movlw	2
  2351   001018  ECF1  F008         	call	_putcm
  2352   00101C                     
  2353                           ;PF.c: 103:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2354   00101C  0E03               	movlw	3
  2355   00101E  6E04               	movwf	??_LCD_Init^0,c
  2356   001020  0E98               	movlw	152
  2357   001022                     u797:
  2358   001022  2EE8               	decfsz	wreg,f,c
  2359   001024  D7FE               	bra	u797
  2360   001026  2E04               	decfsz	??_LCD_Init^0,f,c
  2361   001028  D7FC               	bra	u797
  2362                           
  2363                           ;PF.c: 105:     putcm(0x28);
  2364   00102A  0E28               	movlw	40
  2365   00102C  ECF1  F008         	call	_putcm
  2366   001030                     
  2367                           ;PF.c: 106:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2368   001030  0E03               	movlw	3
  2369   001032  6E04               	movwf	??_LCD_Init^0,c
  2370   001034  0E98               	movlw	152
  2371   001036                     u807:
  2372   001036  2EE8               	decfsz	wreg,f,c
  2373   001038  D7FE               	bra	u807
  2374   00103A  2E04               	decfsz	??_LCD_Init^0,f,c
  2375   00103C  D7FC               	bra	u807
  2376   00103E                     
  2377                           ;PF.c: 108:     putcm(0x2C);
  2378   00103E  0E2C               	movlw	44
  2379   001040  ECF1  F008         	call	_putcm
  2380                           
  2381                           ;PF.c: 109:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2382   001044  0E03               	movlw	3
  2383   001046  6E04               	movwf	??_LCD_Init^0,c
  2384   001048  0E98               	movlw	152
  2385   00104A                     u817:
  2386   00104A  2EE8               	decfsz	wreg,f,c
  2387   00104C  D7FE               	bra	u817
  2388   00104E  2E04               	decfsz	??_LCD_Init^0,f,c
  2389   001050  D7FC               	bra	u817
  2390   001052                     
  2391                           ;PF.c: 111:     putcm(0x0C);
  2392   001052  0E0C               	movlw	12
  2393   001054  ECF1  F008         	call	_putcm
  2394   001058                     
  2395                           ;PF.c: 112:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2396   001058  0E03               	movlw	3
  2397   00105A  6E04               	movwf	??_LCD_Init^0,c
  2398   00105C  0E98               	movlw	152
  2399   00105E                     u827:
  2400   00105E  2EE8               	decfsz	wreg,f,c
  2401   001060  D7FE               	bra	u827
  2402   001062  2E04               	decfsz	??_LCD_Init^0,f,c
  2403   001064  D7FC               	bra	u827
  2404                           
  2405                           ;PF.c: 114:     putcm(0x06);
  2406   001066  0E06               	movlw	6
  2407   001068  ECF1  F008         	call	_putcm
  2408   00106C                     
  2409                           ;PF.c: 115:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2410   00106C  0E03               	movlw	3
  2411   00106E  6E04               	movwf	??_LCD_Init^0,c
  2412   001070  0E98               	movlw	152
  2413   001072                     u837:
  2414   001072  2EE8               	decfsz	wreg,f,c
  2415   001074  D7FE               	bra	u837
  2416   001076  2E04               	decfsz	??_LCD_Init^0,f,c
  2417   001078  D7FC               	bra	u837
  2418   00107A                     
  2419                           ;PF.c: 117:     putcm(0x80);
  2420   00107A  0E80               	movlw	128
  2421   00107C  ECF1  F008         	call	_putcm
  2422                           
  2423                           ;PF.c: 118:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2424   001080  0E03               	movlw	3
  2425   001082  6E04               	movwf	??_LCD_Init^0,c
  2426   001084  0E98               	movlw	152
  2427   001086                     u847:
  2428   001086  2EE8               	decfsz	wreg,f,c
  2429   001088  D7FE               	bra	u847
  2430   00108A  2E04               	decfsz	??_LCD_Init^0,f,c
  2431   00108C  D7FC               	bra	u847
  2432   00108E  0012               	return		;funcret
  2433   001090                     __end_of_LCD_Init:
  2434                           	callstack 0
  2435                           
  2436 ;; *************** function _putcm *****************
  2437 ;; Defined at:
  2438 ;;		line 86 in file "PF.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  data            1    wreg     unsigned char 
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;  data            1    1[COMRAM] unsigned char 
  2443 ;;  Activa          1    2[COMRAM] unsigned char 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      void 
  2446 ;; Registers used:
  2447 ;;		wreg, status,2, status,0
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2453 ;;      Params:         0       0       0       0       0       0       0       0       0
  2454 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2455 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2456 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2457 ;;Total ram usage:        3 bytes
  2458 ;; Hardware stack levels used: 1
  2459 ;; This function calls:
  2460 ;;		Nothing
  2461 ;; This function is called by:
  2462 ;;		_LCD_Init
  2463 ;;		_main
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text16
  2468   0011E2                     __ptext16:
  2469                           	callstack 0
  2470   0011E2                     _putcm:
  2471                           	callstack 30
  2472                           
  2473                           ;incstack = 0
  2474                           ;putcm@data stored from wreg
  2475   0011E2  6E02               	movwf	putcm@data^0,c
  2476   0011E4                     
  2477                           ;PF.c: 87:     char Activa;;PF.c: 88:     Activa = data & 0xF0;
  2478   0011E4  5002               	movf	putcm@data^0,w,c
  2479   0011E6  0BF0               	andlw	240
  2480   0011E8  6E03               	movwf	putcm@Activa^0,c
  2481                           
  2482                           ;PF.c: 89:     LATD = Activa | 0x04;
  2483   0011EA  5003               	movf	putcm@Activa^0,w,c
  2484   0011EC  0904               	iorlw	4
  2485   0011EE  6E8C               	movwf	140,c	;volatile
  2486   0011F0                     
  2487                           ;PF.c: 90:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  2488   0011F0  0E06               	movlw	6
  2489   0011F2                     u857:
  2490   0011F2  2EE8               	decfsz	wreg,f,c
  2491   0011F4  D7FE               	bra	u857
  2492   0011F6  D000               	nop2	
  2493   0011F8                     
  2494                           ;PF.c: 91:     LATD = Activa;
  2495   0011F8  C003  FF8C         	movff	putcm@Activa,3980	;volatile
  2496   0011FC                     
  2497                           ;PF.c: 92:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2498   0011FC  0E03               	movlw	3
  2499   0011FE  6E01               	movwf	??_putcm^0,c
  2500   001200  0E98               	movlw	152
  2501   001202                     u867:
  2502   001202  2EE8               	decfsz	wreg,f,c
  2503   001204  D7FE               	bra	u867
  2504   001206  2E01               	decfsz	??_putcm^0,f,c
  2505   001208  D7FC               	bra	u867
  2506                           
  2507                           ;PF.c: 93:     Activa = data << 4;
  2508   00120A  3802               	swapf	putcm@data^0,w,c
  2509   00120C  0BF0               	andlw	240
  2510   00120E  6E03               	movwf	putcm@Activa^0,c
  2511                           
  2512                           ;PF.c: 94:     LATD = Activa | 0x04;
  2513   001210  5003               	movf	putcm@Activa^0,w,c
  2514   001212  0904               	iorlw	4
  2515   001214  6E8C               	movwf	140,c	;volatile
  2516   001216                     
  2517                           ;PF.c: 95:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  2518   001216  0E06               	movlw	6
  2519   001218                     u877:
  2520   001218  2EE8               	decfsz	wreg,f,c
  2521   00121A  D7FE               	bra	u877
  2522   00121C  D000               	nop2	
  2523   00121E                     
  2524                           ;PF.c: 96:     LATD = Activa;
  2525   00121E  C003  FF8C         	movff	putcm@Activa,3980	;volatile
  2526   001222  0012               	return		;funcret
  2527   001224                     __end_of_putcm:
  2528                           	callstack 0
  2529                           
  2530 ;; *************** function _Configuracion *****************
  2531 ;; Defined at:
  2532 ;;		line 55 in file "PF.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;		None
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;		None
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		wreg, status,2
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2546 ;;      Params:         0       0       0       0       0       0       0       0       0
  2547 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2548 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2549 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2550 ;;Total ram usage:        0 bytes
  2551 ;; Hardware stack levels used: 1
  2552 ;; This function calls:
  2553 ;;		Nothing
  2554 ;; This function is called by:
  2555 ;;		_main
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           	psect	text17
  2560   001264                     __ptext17:
  2561                           	callstack 0
  2562   001264                     _Configuracion:
  2563                           	callstack 30
  2564   001264                     
  2565                           ;PF.c: 57:     ADCON1 = 0x0F;
  2566   001264  0E0F               	movlw	15
  2567   001266  6EC1               	movwf	193,c	;volatile
  2568                           
  2569                           ;PF.c: 58:     OSCCON = 0x72;
  2570   001268  0E72               	movlw	114
  2571   00126A  6ED3               	movwf	211,c	;volatile
  2572                           
  2573                           ;PF.c: 59:     T0CON = 0x88;
  2574   00126C  0E88               	movlw	136
  2575   00126E  6ED5               	movwf	213,c	;volatile
  2576                           
  2577                           ;PF.c: 60:     TMR0 = 0;
  2578   001270  0E00               	movlw	0
  2579   001272  6ED7               	movwf	215,c	;volatile
  2580   001274  0E00               	movlw	0
  2581   001276  6ED6               	movwf	214,c	;volatile
  2582   001278                     
  2583                           ;PF.c: 62:     TRISBbits.RB0 = 0;
  2584   001278  9093               	bcf	147,0,c	;volatile
  2585   00127A                     
  2586                           ;PF.c: 63:     TRISBbits.RB1 = 0;
  2587   00127A  9293               	bcf	147,1,c	;volatile
  2588   00127C                     
  2589                           ;PF.c: 64:     LATBbits.LB0 = 0;
  2590   00127C  908A               	bcf	138,0,c	;volatile
  2591   00127E                     
  2592                           ;PF.c: 65:     LATBbits.LB1 = 0;
  2593   00127E  928A               	bcf	138,1,c	;volatile
  2594                           
  2595                           ;PF.c: 67:     TRISD=0;
  2596   001280  0E00               	movlw	0
  2597   001282  6E95               	movwf	149,c	;volatile
  2598                           
  2599                           ;PF.c: 68:     ANSELD=0;
  2600   001284  0E00               	movlw	0
  2601   001286  010F               	movlb	15	; () banked
  2602   001288  6F5E               	movwf	94,b	;volatile
  2603                           
  2604                           ;PF.c: 69:     ANSELB=0;
  2605   00128A  0E00               	movlw	0
  2606   00128C  6F5C               	movwf	92,b	;volatile
  2607   00128E                     
  2608                           ; BSR set to: 15
  2609   00128E  0012               	return		;funcret
  2610   001290                     __end_of_Configuracion:
  2611                           	callstack 0
  2612                           
  2613                           	psect	rparam
  2614   000000                     
  2615                           	psect	idloc
  2616                           
  2617                           ;Config register IDLOC0 @ 0x200000
  2618                           ;	unspecified, using default values
  2619   200000                     	org	2097152
  2620   200000  FF                 	db	255
  2621                           
  2622                           ;Config register IDLOC1 @ 0x200001
  2623                           ;	unspecified, using default values
  2624   200001                     	org	2097153
  2625   200001  FF                 	db	255
  2626                           
  2627                           ;Config register IDLOC2 @ 0x200002
  2628                           ;	unspecified, using default values
  2629   200002                     	org	2097154
  2630   200002  FF                 	db	255
  2631                           
  2632                           ;Config register IDLOC3 @ 0x200003
  2633                           ;	unspecified, using default values
  2634   200003                     	org	2097155
  2635   200003  FF                 	db	255
  2636                           
  2637                           ;Config register IDLOC4 @ 0x200004
  2638                           ;	unspecified, using default values
  2639   200004                     	org	2097156
  2640   200004  FF                 	db	255
  2641                           
  2642                           ;Config register IDLOC5 @ 0x200005
  2643                           ;	unspecified, using default values
  2644   200005                     	org	2097157
  2645   200005  FF                 	db	255
  2646                           
  2647                           ;Config register IDLOC6 @ 0x200006
  2648                           ;	unspecified, using default values
  2649   200006                     	org	2097158
  2650   200006  FF                 	db	255
  2651                           
  2652                           ;Config register IDLOC7 @ 0x200007
  2653                           ;	unspecified, using default values
  2654   200007                     	org	2097159
  2655   200007  FF                 	db	255
  2656                           
  2657                           	psect	config
  2658                           
  2659                           ;Config register CONFIG1L @ 0x300000
  2660                           ;	unspecified, using default values
  2661                           ;	PLL Selection
  2662                           ;	PLLSEL = 0x0, unprogrammed default
  2663                           ;	PLL Enable Configuration bit
  2664                           ;	CFGPLLEN = 0x0, unprogrammed default
  2665                           ;	CPU System Clock Postscaler
  2666                           ;	CPUDIV = 0x0, unprogrammed default
  2667                           ;	Low Speed USB mode with 48 MHz system clock
  2668                           ;	LS48MHZ = 0x0, unprogrammed default
  2669   300000                     	org	3145728
  2670   300000  00                 	db	0
  2671                           
  2672                           ;Config register CONFIG1H @ 0x300001
  2673                           ;	Oscillator Selection
  2674                           ;	FOSC = INTOSCIO, Internal oscillator
  2675                           ;	Primary Oscillator Shutdown
  2676                           ;	PCLKEN = 0x1, unprogrammed default
  2677                           ;	Fail-Safe Clock Monitor
  2678                           ;	FCMEN = 0x0, unprogrammed default
  2679                           ;	Internal/External Oscillator Switchover
  2680                           ;	IESO = 0x0, unprogrammed default
  2681   300001                     	org	3145729
  2682   300001  28                 	db	40
  2683                           
  2684                           ;Config register CONFIG2L @ 0x300002
  2685                           ;	unspecified, using default values
  2686                           ;	Power-up Timer Enable
  2687                           ;	nPWRTEN = 0x1, unprogrammed default
  2688                           ;	Brown-out Reset Enable
  2689                           ;	BOREN = 0x3, unprogrammed default
  2690                           ;	Brown-out Reset Voltage
  2691                           ;	BORV = 0x3, unprogrammed default
  2692                           ;	Low-Power Brown-out Reset
  2693                           ;	nLPBOR = 0x1, unprogrammed default
  2694   300002                     	org	3145730
  2695   300002  5F                 	db	95
  2696                           
  2697                           ;Config register CONFIG2H @ 0x300003
  2698                           ;	Watchdog Timer Enable bits
  2699                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  2700                           ;	Watchdog Timer Postscaler
  2701                           ;	WDTPS = 0xF, unprogrammed default
  2702   300003                     	org	3145731
  2703   300003  3C                 	db	60
  2704                           
  2705                           ; Padding undefined space
  2706   300004                     	org	3145732
  2707   300004  FF                 	db	255
  2708                           
  2709                           ;Config register CONFIG3H @ 0x300005
  2710                           ;	CCP2 MUX bit
  2711                           ;	CCP2MX = 0x1, unprogrammed default
  2712                           ;	PORTB A/D Enable bit
  2713                           ;	PBADEN = 0x1, unprogrammed default
  2714                           ;	Timer3 Clock Input MUX bit
  2715                           ;	T3CMX = 0x1, unprogrammed default
  2716                           ;	SDO Output MUX bit
  2717                           ;	SDOMX = 0x1, unprogrammed default
  2718                           ;	Master Clear Reset Pin Enable
  2719                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  2720   300005                     	org	3145733
  2721   300005  D3                 	db	211
  2722                           
  2723                           ;Config register CONFIG4L @ 0x300006
  2724                           ;	Stack Full/Underflow Reset
  2725                           ;	STVREN = 0x1, unprogrammed default
  2726                           ;	Single-Supply ICSP Enable bit
  2727                           ;	LVP = OFF, Single-Supply ICSP disabled
  2728                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  2729                           ;	ICPRT = OFF, ICPORT disabled
  2730                           ;	Extended Instruction Set Enable bit
  2731                           ;	XINST = 0x0, unprogrammed default
  2732                           ;	Background Debugger Enable bit
  2733                           ;	DEBUG = 0x1, unprogrammed default
  2734   300006                     	org	3145734
  2735   300006  81                 	db	129
  2736                           
  2737                           ; Padding undefined space
  2738   300007                     	org	3145735
  2739   300007  FF                 	db	255
  2740                           
  2741                           ;Config register CONFIG5L @ 0x300008
  2742                           ;	unspecified, using default values
  2743                           ;	Block 0 Code Protect
  2744                           ;	CP0 = 0x1, unprogrammed default
  2745                           ;	Block 1 Code Protect
  2746                           ;	CP1 = 0x1, unprogrammed default
  2747                           ;	Block 2 Code Protect
  2748                           ;	CP2 = 0x1, unprogrammed default
  2749                           ;	Block 3 Code Protect
  2750                           ;	CP3 = 0x1, unprogrammed default
  2751   300008                     	org	3145736
  2752   300008  0F                 	db	15
  2753                           
  2754                           ;Config register CONFIG5H @ 0x300009
  2755                           ;	unspecified, using default values
  2756                           ;	Boot Block Code Protect
  2757                           ;	CPB = 0x1, unprogrammed default
  2758                           ;	Data EEPROM Code Protect
  2759                           ;	CPD = 0x1, unprogrammed default
  2760   300009                     	org	3145737
  2761   300009  C0                 	db	192
  2762                           
  2763                           ;Config register CONFIG6L @ 0x30000A
  2764                           ;	unspecified, using default values
  2765                           ;	Block 0 Write Protect
  2766                           ;	WRT0 = 0x1, unprogrammed default
  2767                           ;	Block 1 Write Protect
  2768                           ;	WRT1 = 0x1, unprogrammed default
  2769                           ;	Block 2 Write Protect
  2770                           ;	WRT2 = 0x1, unprogrammed default
  2771                           ;	Block 3 Write Protect
  2772                           ;	WRT3 = 0x1, unprogrammed default
  2773   30000A                     	org	3145738
  2774   30000A  0F                 	db	15
  2775                           
  2776                           ;Config register CONFIG6H @ 0x30000B
  2777                           ;	unspecified, using default values
  2778                           ;	Configuration Registers Write Protect
  2779                           ;	WRTC = 0x1, unprogrammed default
  2780                           ;	Boot Block Write Protect
  2781                           ;	WRTB = 0x1, unprogrammed default
  2782                           ;	Data EEPROM Write Protect
  2783                           ;	WRTD = 0x1, unprogrammed default
  2784   30000B                     	org	3145739
  2785   30000B  E0                 	db	224
  2786                           
  2787                           ;Config register CONFIG7L @ 0x30000C
  2788                           ;	unspecified, using default values
  2789                           ;	Block 0 Table Read Protect
  2790                           ;	EBTR0 = 0x1, unprogrammed default
  2791                           ;	Block 1 Table Read Protect
  2792                           ;	EBTR1 = 0x1, unprogrammed default
  2793                           ;	Block 2 Table Read Protect
  2794                           ;	EBTR2 = 0x1, unprogrammed default
  2795                           ;	Block 3 Table Read Protect
  2796                           ;	EBTR3 = 0x1, unprogrammed default
  2797   30000C                     	org	3145740
  2798   30000C  0F                 	db	15
  2799                           
  2800                           ;Config register CONFIG7H @ 0x30000D
  2801                           ;	unspecified, using default values
  2802                           ;	Boot Block Table Read Protect
  2803                           ;	EBTRB = 0x1, unprogrammed default
  2804   30000D                     	org	3145741
  2805   30000D  40                 	db	64
  2806                           tosu	equ	0xFFF
  2807                           tosh	equ	0xFFE
  2808                           tosl	equ	0xFFD
  2809                           stkptr	equ	0xFFC
  2810                           pclatu	equ	0xFFB
  2811                           pclath	equ	0xFFA
  2812                           pcl	equ	0xFF9
  2813                           tblptru	equ	0xFF8
  2814                           tblptrh	equ	0xFF7
  2815                           tblptrl	equ	0xFF6
  2816                           tablat	equ	0xFF5
  2817                           prodh	equ	0xFF4
  2818                           prodl	equ	0xFF3
  2819                           indf0	equ	0xFEF
  2820                           postinc0	equ	0xFEE
  2821                           postdec0	equ	0xFED
  2822                           preinc0	equ	0xFEC
  2823                           plusw0	equ	0xFEB
  2824                           fsr0h	equ	0xFEA
  2825                           fsr0l	equ	0xFE9
  2826                           wreg	equ	0xFE8
  2827                           indf1	equ	0xFE7
  2828                           postinc1	equ	0xFE6
  2829                           postdec1	equ	0xFE5
  2830                           preinc1	equ	0xFE4
  2831                           plusw1	equ	0xFE3
  2832                           fsr1h	equ	0xFE2
  2833                           fsr1l	equ	0xFE1
  2834                           bsr	equ	0xFE0
  2835                           indf2	equ	0xFDF
  2836                           postinc2	equ	0xFDE
  2837                           postdec2	equ	0xFDD
  2838                           preinc2	equ	0xFDC
  2839                           plusw2	equ	0xFDB
  2840                           fsr2h	equ	0xFDA
  2841                           fsr2l	equ	0xFD9
  2842                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160      6      43
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S606$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S606$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[6]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[6]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[6]), STR_1(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S646$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[6]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___aomod
    _LCD_Init->_putcm

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    5965
                                              2 BANK0      4     4      0
                      _Configuracion
                           _LCD_Init
                   _ObtenerDistancia
                          _TMR0_Init
                    _Ultrasonic_Init
                             _printf
                              _putcm
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    5629
                                             91 COMRAM     4     0      4
                                              0 BANK0      2     2      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5423
                                             83 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    5073
                                             65 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3785
                                             30 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2135
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     999
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     750
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                3     3      0     134
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _Ultrasonic_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ObtenerDistancia                                     4     2      2      23
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0     134
                                              3 COMRAM     1     1      0
                              _putcm
 ---------------------------------------------------------------------------------
 (1) _putcm                                                3     3      0     134
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Configuracion                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuracion
   _LCD_Init
     _putcm
   _ObtenerDistancia
   _TMR0_Init
   _Ultrasonic_Init
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _putcm

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      6      2B       5       26.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRllh        2B      0       0      27        0.0%
BITBIGSFRhllh       2B      0       0      23        0.0%
BITBIGSFRhh         28      0       0      20        0.0%
BITBIGSFRhlhl       11      0       0      22        0.0%
BITBIGSFRllll        9      0       0      29        0.0%
BITBIGSFRlhh         6      0       0      25        0.0%
BITBIGSFRlllh        1      0       0      28        0.0%
BITBIGSFRhlhh        1      0       0      21        0.0%
BITBIGSFRlhl         1      0       0      26        0.0%
BITBIGSFRhlll        1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8A      30        0.0%
DATA                 0      0      8A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Nov 04 09:10:08 2022

                      l30 12E8                        l33 12DE                        l42 1222  
                      l27 12F0                        l51 0F4C                        l36 128E  
                      l45 108E                        l39 119C                       l172 0C16  
                     l185 0D7A                       l801 1262                       l813 1004  
                     l821 11E0                       l736 12B6                       l762 1108  
                     l770 08EE                       l781 0A8E                       l758 10B2  
                     l767 08A0                       l769 08A8                       l794 1156  
                     l788 0EC8                       l798 125A                       u400 0FF2  
                     u401 0FEE                       u410 11E0                       u411 11DC  
                     u420 0AA2                       u500 0C5C                       u421 0A9E  
                     u501 0C58                       u430 0AD4                       u510 0C9A  
                     u431 0AD0                       u511 0C96                       u520 0CC4  
                     u600 0858                       u441 0AFE                       u521 0CC0  
                     u601 0854                       u450 0B22                       u530 0CF2  
                     u370 0F82                       u610 0894                       u451 0B1E  
                     u531 0CEE                       u371 0F7E                       u611 0890  
                     u460 0B4C                       u540 0D3A                       u380 0F94  
                     u620 08C0                       u700 0E08                       u461 0B48  
                     u541 0D36                       u381 0F90                       u621 08BC  
                     u701 0E04                       u470 0B8C                       u390 0FBC  
                     u550 109E                       u630 08D6                       u710 114E  
                     u471 0B88                       u391 0FB8                       u551 109A  
                     u631 08D2                       u711 114A                       u480 0BD6  
                     u560 10F4                       u640 0A10                       u720 0F44  
                     u481 0BD2                       u561 10F0                       u641 0A0C  
                     u721 0F40                       u490 0C2A                       u570 123E  
                     u650 0A2E                       u491 0C26                       u571 123A  
                     u651 0A2A                       u660 0A48                       u580 0844  
                     u661 0A44                       u581 083E                       u670 0A58  
                     u590 0846                       u807 1036                       u671 0A54  
                     u680 0DA0                       u817 104A                       u681 0D9C  
                     u737 0EDA                       u690 0DEC                       u827 105E  
                     u691 0DE8                       u747 0F5C                       u837 1072  
                     u757 1168                       u847 1086                       u767 117A  
                     u857 11F2                       u777 1190                       u867 1202  
                     u787 100C                       u877 1218                       u797 1022  
                     _abs 1224                       _pad 1090                       wreg 000FE8  
                    l1201 0BF6                      l1211 0C4A                      l1131 116E  
                    ?_abs 0013                      l1221 0CA2                      l1213 0C4E  
                    l1205 0C18                      l1133 1182                      l1141 0F82  
                    l1301 0A48                      l1231 0D24                      l1223 0CB6  
                    l1215 0C5C                      l1207 0C1C                      l1135 1188  
                    l1127 115A                      l1143 0F94                      l1303 0A58  
                    l1311 0D7C                      l1161 0A90                      l1225 0CC4  
                    l1233 0D2A                      l1217 0C7C                      l1209 0C2A  
                    l1137 1196                      l1129 1166                      l1145 0F9E  
                    l1153 119E                      l1241 1090                      l1305 0A5E  
                    l1321 0DD0                      l1313 0DA0                      l1401 1290  
                    l1171 0AD4                      l1163 0A94                      l1235 0D3A  
                    l1227 0CF2                      l1219 0C9A                      l1147 0FBC  
                    l1139 0F70                      l1155 11AA                      l1251 10D6  
                    l1243 109E                      l1307 0A6E                      l1331 0E8E  
                    l1323 0DEC                      l1315 0DAE                      l1403 129A  
                    l1411 0EE8                      l1341 11E4                      l1181 0B2A  
                    l1173 0AF4                      l1165 0AA2                      l1237 0D5A  
                    l1229 0D12                      l1149 0FF2                      l1157 11BC  
                    l1253 10F4                      l1245 10AA                      l1261 0834  
                    l1325 0E08                      l1317 0DBC                      l1421 0F0C  
                    l1413 0EEC                      l1351 121E                      l1343 11F0  
                    l1191 0BAC                      l1183 0B3E                      l1175 0AF8  
                    l1167 0AC2                      l1255 1224                      l1159 11C0  
                    l1247 10BE                      l1271 08B0                      l1263 0848  
                    l1327 0E5E                      l1319 0DC0                      l1335 0EA0  
                    l1423 0F12                      l1415 0EF0                      l1407 0ECA  
                    l1345 11F8                      l1193 0BAE                      l1185 0B4C  
                    l1177 0B04                      l1169 0AC6                      l1257 123E  
                    l1249 10D2                      l1281 08EA                      l1273 08C0  
                    l1265 0858                      l1353 110A                      l1425 0F26  
                    l1417 0EF4                      l1409 0ECE                      l1347 11FC  
                    l1371 12D2                      l1363 12EA                      l1195 0BC0  
                    l1187 0B5E                      l1179 0B22                      l1291 098C  
                    l1283 08F6                      l1275 08C6                      l1267 0878  
                    l1259 0814                      l1355 1116                      l1427 0F44  
                    l1419 0F00                      l1381 127E                      l1373 1264  
                    l1349 1216                      l1365 12E0                      l1189 0B8C  
                    l1197 0BC6                      l1293 0992                      l1285 08FE  
                    l1277 08D6                      l1269 0894                      l1357 1132  
                    l1429 0F50                      l1375 1278                      l1391 103E  
                    l1383 1006                      l1367 12E0                      l1199 0BD6  
                    l1287 0904                      l1295 09F6                      l1279 08E2  
                    l1359 114E                      l1377 127A                      l1393 1052  
                    l1385 1016                      l1297 0A10                      l1289 0986  
                    l1379 127C                      l1395 1058                      l1387 101C  
                    l1299 0A2E                      l1397 106C                      l1389 1030  
                    l1399 107A                      ?_pad 0014                      STR_1 0801  
                    STR_2 080C                      _LATD 000F8C                      _TMR0 000FD6  
                    abs@a 0013                      _dbuf 0065                      _main 0ECA  
                    _dtoa 0814                      _prec 0062                      pad@i 001B  
                    pad@p 0018                      fsr1h 000FE2                      fsr2h 000FDA  
                    indf2 000FDF                      fsr1l 000FE1                      pad@w 001D  
                    fsr2l 000FD9                      start 0000              ___param_bank 000000  
                   ??_abs 0015                     ??_pad 001A          __end_of_LCD_Init 1090  
         __end_of___aodiv 0C18                     ?_main 0001                     ?_dtoa 001F  
         __end_of___aomod 0D7C                     _T0CON 000FD5              vfpfcnvrt@fmt 0044  
                   _TRISD 000F95                     _flags 0064                     _fputc 0F70  
       ??_Ultrasonic_Init 0001                     _fputs 119E                     pad@fp 0014  
                   _width 0060                     _putch 1158                     _putcm 11E2  
                   dtoa@d 0021                     dtoa@i 003F                     dtoa@n 0037  
                   dtoa@p 0033                     dtoa@s 0041                     dtoa@w 0035  
                   tablat 000FF5                     status 000FD8           __initialization 12B8  
            __end_of_main 0F70              __end_of_dtoa 0A90                    ??_main 0087  
                  ??_dtoa 0029             __activetblptr 000001             main@distancia 0089  
                  _ADCON1 000FC1                    ?_fputc 0004                    ?_fputs 000D  
                  ?_putch 0001                    _ANSELB 000F5C                    _ANSELD 000F5E  
                  ?_putcm 0001  __end_of_ObtenerDistancia 12EA                    _OSCCON 000FD3  
            vfprintf@cfmt 005A         __end_of_TMR0_Init 12E0                 ??___aodiv 0011  
               ??___aomod 0011                    clear_0 12BE                    isa$std 000001  
                  _printf 1290                    pad@buf 0016                    dtoa@fp 001F  
                  fputc@c 0004                    fputs@c 0011                    fputs@i 0012  
                  fputs@s 000D              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8          __end_of_vfprintf 1158  
              __accesstop 0060   __end_of__initialization 12C4                 ?_LCD_Init 0001  
           ___rparam_used 000001            __pcstackCOMRAM 0001             __end_of_fputc 1006  
           __end_of_fputs 11E2             __end_of_putch 119E             __end_of_putcm 1224  
                 ??_fputc 0008                   ??_fputs 0011                   ??_putch 0001  
                 ??_putcm 0001                __pbssBANK0 0060     __end_of_Configuracion 1290  
              ??_LCD_Init 0004           _Ultrasonic_Init 12EA                   ?_printf 005C  
                 __Hparam 0000                   __Lparam 0000                   ___aodiv 0A90  
                 ___aomod 0C18                 ?_vfprintf 0054              __psmallconst 0800  
                 __pcinit 12B8                   __ramtop 0800                   __ptext0 0ECA  
                 __ptext1 1290                   __ptext2 110A                   __ptext3 0D7C  
                 __ptext4 0814                   __ptext5 1090                   __ptext6 119E  
                 __ptext7 0F70                   __ptext8 1158                   __ptext9 1224  
    end_of_initialization 12C4                   fputc@fp 0006         ?_ObtenerDistancia 0001  
                 fputs@fp 000F        ??_ObtenerDistancia 0003   __end_of_Ultrasonic_Init 12F2  
       __end_of_vfpfcnvrt 0ECA                   postdec2 000FDD                   postinc0 000FEE  
                 postinc1 000FE6                   postinc2 000FDE          vfpfcnvrt@convarg 004A  
              ??_vfprintf 005A                 _TMR0_Init 12D2                 _TRISBbits 000F93  
             vfpfcnvrt@ap 0046               vfpfcnvrt@cp 0052               vfpfcnvrt@fp 0042  
              ?_TMR0_Init 0001               putch@Activa 0003            __end_of_printf 12B8  
             putcm@Activa 0003       start_initialization 12B8               __end_of_abs 1264  
             __end_of_pad 110A               vfprintf@fmt 0056          ?_Ultrasonic_Init 0001  
                ??_printf 0060             __pcstackBANK0 0085          ___aodiv@dividend 0001  
                ?___aodiv 0001                  ?___aomod 0001          ___aodiv@quotient 0013  
             ??_TMR0_Init 0001               __smallconst 0800                  _LCD_Init 1006  
                _LATBbits 000F8A                 _vfpfcnvrt 0D7C             _Configuracion 1264  
                __Hrparam 0000                vfprintf@ap 0058                  __Lrparam 0000  
              vfprintf@fp 0054              __Lsmallconst 0800                ?_vfpfcnvrt 0042  
         ___aodiv@divisor 0009           ___aodiv@counter 0011                  _dtoa$674 0031  
                __ptext10 0C18                  __ptext11 0A90                  __ptext12 12EA  
                __ptext13 12D2                  __ptext14 12E0                  __ptext15 1006  
                __ptext16 11E2                  __ptext17 1264            ?_Configuracion 0001  
                isa$xinst 000000                  _vfprintf 110A                 printf@fmt 005C  
        ___aomod@dividend 0001                 putch@data 0002                 putcm@data 0002  
                printf@ap 0085           ___aomod@divisor 0009               ??_vfpfcnvrt 0048  
         ___aomod@counter 0011          _ObtenerDistancia 12E0           ??_Configuracion 0001  
            ___aodiv@sign 0012              ___aomod@sign 0012  
